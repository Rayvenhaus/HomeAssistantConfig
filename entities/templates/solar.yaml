---
binary_sensor:
  - name: solar_sungrow_dataflow
    unique_id: solar_sungrow_dataflow
    icon: mdi:power-cycle
    device_class: problem
    delay_on: 0
    state: >
      {%- if is_state('sensor.sun_state_day', 'day') and (as_timestamp(now())-as_timestamp(states.sensor['sungrow_sg5kd_daily_generation'].last_updated))/60 > 240 %}
      True
      {%- else %}
      False
      {%- endif %}
    attributes:
      category: solar

sensor:
  - name: sungrow_sg5kd_solar_consumed
    unique_id: sungrow_sg5kd_solar_consumed
    state_class: "total"
    device_class: energy
    unit_of_measurement: "kWh"
    icon: mdi:solar-power
    state: >-
      {%- set solar_prod = (states('sensor.sungrow_sg5kd_daily_generation')|float(0)) %}
      {%- set energy_sold = states('sensor.sungrow_sg5kd_daily_export_to_grid')|float(0) %}
      {%- set solar_consumed = (solar_prod - energy_sold) | float(0) %}

      {%- if solar_consumed <= 0 %}
        {{ 0 }}
      {%- else %}
        {{ solar_consumed | round(2) }}
      {%- endif %}
    attributes:
      category: solar
  - name: "sungrowsolar_solar_production"
    unique_id: sungrowsolar_solar_production
    unit_of_measurement: "kW"
    device_class: power
    state: >
      {{ ( state_attr('sensor.sungrowsolar_alldata', 'total_active_power') | float(default=0) ) / (1000) }}
  - name: "sungrowsolar_return_to_grid"
    unique_id: sungrowsolar_return_to_grid
    unit_of_measurement: "kW"
    device_class: power
    state: >
      {{ ( state_attr('sensor.sungrowsolar_alldata', 'export_to_grid') | float(default=0) ) / (1000) }}
  - name: "sungrowsolar_import_from_grid"
    unique_id: sungrowsolar_import_from_grid
    unit_of_measurement: "kW"
    device_class: power
    state: >
      {{ ( state_attr('sensor.sungrowsolar_alldata', 'import_from_grid') | float(default=0) ) / (1000) }}
  - name: "sungrowsolar_load_power"
    unique_id: sungrowsolar_load_power
    unit_of_measurement: "kW"
    device_class: power
    state: >
      {{ ( state_attr('sensor.sungrowsolar_alldata', 'load_power') | float(default=0) ) / (1000) }}
  - name: "sungrowsolar_export_to_grid"
    unique_id: sungrowsolar_export_to_grid
    unit_of_measurement: "kW"
    device_class: power
    state: >
      {{ -( state_attr('sensor.sungrowsolar_alldata', 'export_to_grid') | float(default=0) ) / (1000) }}
  - name: "sungrowsolar_daily_power_yields"
    unique_id: sungrowsolar_daily_power_yields
    unit_of_measurement: "kWh"
    device_class: energy
    state: >
      {{ ( state_attr('sensor.sungrowsolar_alldata', 'daily_power_yields') | float(default=0) ) }}
  - name: "sungrowsolar_daily_export_energy"
    unique_id: sungrowsolar_daily_export_energy
    unit_of_measurement: "kWh"
    device_class: energy
    state: >
      {{ ( state_attr('sensor.sungrowsolar_alldata', 'daily_export_energy') | float(default=0) ) }}
  - name: "sungrowsolar_daily_import_energy"
    unique_id: sungrowsolar_daily_import_energy
    unit_of_measurement: "kWh"
    device_class: energy
    state: >
      {{ ( state_attr('sensor.sungrowsolar_alldata', 'daily_import_energy') | float(default=0) ) }}
  - name: "sungrowsolar_daily_direct_energy_consumption"
    unique_id: sungrowsolar_daily_direct_energy_consumption
    unit_of_measurement: "kWh"
    device_class: energy
    state: >
      {{ ( state_attr('sensor.sungrowsolar_alldata', 'daily_direct_energy_consumption') | float(default=0) ) }}
  - name: sungrowsolar_runtime
    unique_id: sungrowsolar_runtime
    state: >
      {%- set time = state_attr('sensor.sungrowsolar_alldata', 'daily_running_time') | int(default=0) * 60 %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
