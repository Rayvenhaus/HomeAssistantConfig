---
binary_sensor:
  - name: "[Solar] Dataflow Issue?"
    unique_id: solar_dataflow_issue
    icon: mdi:power-cycle
    device_class: problem
    delay_on: 0
    state: >
      {%- if is_state('sensor.sun_state_day', 'Day') and (has_value('sensor.sungrow_sg5kd_active_generation') or (as_timestamp(now())-as_timestamp(states.sensor['sungrow_sg5kd_active_generation'].last_updated))/60 < 240) %}
      False
      {%- else %}
      True
      {%- endif %}
    attributes:
      category: solar

sensor:
  - name: "[Solar] Production (Active)"
    unique_id: solar_production_active
    icon: mdi:solar-power
    state: >-
      {% if has_value('sensor.sungrow_sg5kd_active_generation') -%}
        {{states('sensor.sungrow_sg5kd_active_generation')|float(0)}}
      {% else -%}
        {{state_attr('sensor.sungrowsolar_alldata', 'total_active_power') | float(0)}}
      {%- endif %}
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    attributes:
      category: solar
      kw_value: >
        {{ states(this.entity_id) | float(0) / 1000 }}
      source: >-
        {% if has_value('sensor.sungrow_sg5kd_active_generation') -%}
          Sungather (Addon)
        {% else -%}
          Sungather (MQTT)
        {%- endif %}

  - name: "[Solar] Return to Grid (Active)"
    unique_id: solar_return_to_grid_active
    icon: mdi:solar-power
    state: >-
      {% if has_value('sensor.sungrow_sg5kd_active_export_to_grid') -%}
        {{states('sensor.sungrow_sg5kd_active_export_to_grid')|float(0)}}
      {% else -%}
        {{state_attr('sensor.sungrowsolar_alldata', 'export_to_grid') | float(0)}}
      {%- endif %}
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    attributes:
      category: solar
      kw_value: >
        {{ states(this.entity_id) | float(0) / 1000 }}
      source: >-
        {% if has_value('sensor.sungrow_sg5kd_active_export_to_grid') -%}
          Sungather (Addon)
        {% else -%}
          Sungather (MQTT)
        {%- endif %}

  - name: "[Solar] Import from Grid (Active)"
    unique_id: solar_import_from_grid_active
    icon: mdi:solar-power
    state: >-
      {% if has_value('sensor.sungrow_sg5kd_active_import_from_grid') -%}
        {{states('sensor.sungrow_sg5kd_active_import_from_grid')|float(0)}}
      {% else -%}
        {{state_attr('sensor.sungrowsolar_alldata', 'import_from_grid') | float(0)}}
      {%- endif %}
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    attributes:
      category: solar
      kw_value: >
        {{ states(this.entity_id) | float(0) / 1000 }}
      source: >-
        {% if has_value('sensor.sungrow_sg5kd_active_import_from_to_grid') -%}
          Sungather (Addon)
        {% else -%}
          Sungather (MQTT)
        {%- endif %}

  - name: "[Solar] Load Power (Active)"
    unique_id: solar_load_power
    icon: mdi:solar-power
    state: >-
      {% if has_value('sensor.sungrow_sg5kd_load_power') -%}
        {{states('sensor.sungrow_sg5kd_load_power')|float(0)}}
      {% else -%}
        {{state_attr('sensor.sungrowsolar_alldata', 'load_power') | float(0)}}
      {%- endif %}
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    attributes:
      category: solar
      kw_value: >
        {{ states(this.entity_id) | float(0) / 1000 }}
      source: >-
        {% if has_value('sensor.sungrow_sg5kd_load_power') -%}
          Sungather (Addon)
        {% else -%}
          Sungather (MQTT)
        {%- endif %}

  - name: "[Solar] Runtime"
    unique_id: solar_runtime
    icon: mdi:solar-power
    state: >
      {%- set time = state_attr('sensor.sungrowsolar_alldata', 'daily_running_time') | int(default=0) * 60 %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
    attributes:
      category: solar

  - name: "[Solar] Inverter Temperature"
    unique_id: solar_inverter_temperature
    icon: mdi:solar-power
    device_class: temperature
    state_class: measurement
    unit_of_measurement: Â°C
    state: >
      {{state_attr('sensor.sungrowsolar_alldata', 'internal_temperature') | float(0)}}
    attributes:
      category: solar

  # - name: "[Solar] Consumption (Active)"
  #   unique_id: solar_consumption_active
  #   unit_of_measurement: "W"
  #   device_class: power
  #   state_class: measurement
  #   icon: mdi:solar-power
  #   state: >-
  #     {%- set solar_prod = (states('sensor.solar_production_active')|float(0)) %}
  #     {%- set return_to_grid = states('sensor.solar_export_to_grid_active')|float(0) %}
  #     {%- set solar_consumed = (solar_prod - return_to_grid) | float(0) %}
  #     {%- if solar_consumed <= 0 %}
  #       {{ 0 }}
  #     {%- else %}
  #       {{ solar_consumed | round(2) }}
  #     {%- endif %}
  #   attributes:
  #     category: solar
  #     kw_value: >
  #       {{ states(this.entity_id) | float(0) / 1000 }}
