# https://www.reddit.com/r/homeassistant/comments/ujytvs/made_a_wireless_eink_dashboard_for_my_balcony/

substitutions:
  esp_name: epaper_dashboard
  esp_hostname: epaper47t5
  ip_address: 192.168.1.198
  ip_gw: 192.168.1.1
  ip_netmask: 255.255.255.0
  run_time: 24h
  sleep_time: 2min

esphome:
  name: ${esp_hostname}
  comment: ${esp_name}
  includes:
    - common.h

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

api:
  password: ""

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${ip_address}
    gateway: ${ip_gw}
    subnet: ${ip_netmask}
  ap:
    ssid: ${esp_name} Fallback"
    password: !secret ap_password

captive_portal:

web_server:
  port: 80
  include_internal: true

time:
  - platform: homeassistant
    id: ntp

external_components:
  - source: "github://ashald/esphome@lilygo-t5-47"
    components:
      - lilygo_t5_47
    refresh: 0s

button:
  - platform: restart
    name: "${esp_name} Restart"
    internal: false
  - platform: template
    name: "${esp_name} Refresh"
    icon: "mdi:update"
    on_press:
      then:
        - component.update: "${esp_name}_display"
    internal: false

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${esp_name} IP Address"
      id: ip_address
      icon: mdi:wifi
      entity_category: diagnostic
    ssid:
      name: "${esp_name} Connected SSID"
      id: ssid
      icon: mdi:wifi-strength-2
      entity_category: diagnostic
    bssid:
      name: "${esp_name} Connected BSSID"
      id: bssid
      icon: mdi:wifi-strength-2
      entity_category: diagnostic

  - platform: template
    name: "${esp_name} Uptime"
    id: uptime_human
    icon: mdi:clock-start

  - platform: version
    name: "${esp_name} ESPHome Version"
    entity_category: diagnostic

  # media
  - platform: homeassistant
    entity_id: media_player.office_sonos
    attribute: media_title
    id: sonos_title
  - platform: homeassistant
    entity_id: media_player.office_sonos
    attribute: media_artist
    id: sonos_artist
    
  - platform: homeassistant
    id: apple_tv_title
    entity_id: media_player.apple_tv_bedroom
    attribute: media_title
  - platform: homeassistant
    id: apple_tv_artist
    entity_id: media_player.apple_tv_bedroom
    attribute: media_artist    

sensor:
  - id: battery
    name: "${esp_name} Battery Voltage"
    platform: lilygo_t5_47
    unit_of_measurement: V
    state_class: measurement
    device_class: voltage
    update_interval: 60s

  - platform: wifi_signal
    id: sensor_wifi_signal
    name: "${esp_name} WiFi"
    update_interval: 60s
    on_value:
      - component.update: sensor_wifi_signal_percentage

  - platform: template
    id: sensor_wifi_signal_percentage
    name: "${esp_name} Wi-Fi Signal Percentage"
    icon: "mdi:wifi"
    unit_of_measurement: "%"
    update_interval: never
    lambda: |-
      if (id(sensor_wifi_signal).state) {
        if (id(sensor_wifi_signal).state <= -100 ) {
          return 0;
        } else if (id(sensor_wifi_signal).state >= -50) {
          return 100;
        } else {
          return 2 * (id(sensor_wifi_signal).state + 100);
        }
      } else {
        return NAN;
      }
  - platform: homeassistant
    id: temperature
    entity_id: sensor.tempest_st_00056115_temperature

  - platform: homeassistant
    id: max_temp
    entity_id: sensor.tempest_st_00056115_temperature
    attribute: max_day

  - platform: homeassistant
    id: min_temp
    entity_id: sensor.tempest_st_00056115_temperature
    attribute: min_day

  - platform: homeassistant
    id: rainfall
    entity_id: sensor.tempest_st_00056115_rain_today

  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

font:
  - file:
      type: gfonts
      family: Roboto
      weight: 700
    id: din_big
    size: 50
    glyphs: "'!%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ íëabcdefghijklmnopqrstuvwxyz&/"
  - file:
      type: gfonts
      family: Norican
    id: norican_60
    size: 60
    glyphs: "'!%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ íëabcdefghijklmnopqrstuvwxyz&/"
  - file:
      type: gfonts
      family: Roboto
      weight: 500
    id: din_med
    size: 30
    glyphs: "'!%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ íëabcdefghijklmnopqrstuvwxyz&/"
  - file:
      type: gfonts
      family: Roboto
    id: text_25
    size: 25
    glyphs: "'!%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ íëabcdefghijklmnopqrstuvwxyz&/"
  - file:
      type: gfonts
      family: Roboto
    id: text_20
    size: 20
    glyphs: "'!%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ íëabcdefghijklmnopqrstuvwxyz&/"
  - file:
      type: gfonts
      family: Roboto
      weight: 700
    id: text_25_bold
    size: 25
    glyphs: "'!%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ íëabcdefghijklmnopqrstuvwxyz&/"
  - file:
      type: gfonts
      family: Roboto
      weight: 700
    id: din_small_bold
    size: 15
    glyphs: "'!%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ íëabcdefghijklmnopqrstuvwxyz&/"

  # https://pictogrammers.github.io/@mdi/font/5.3.45/
  - file: "fonts/materialdesignicons-webfont.ttf"
    id: font_icons
    size: 40
    glyphs:
      - "\U000F0384" # MusicBox
      - "\U000F0502" # TVbox

display:
  platform: lilygo_t5_47
  full_update_every: 1
  cycles_render: 20
  cycles_invert: 20
  id: "${esp_name}_display"
  update_interval: 30s
  rotation: 180
  # lambda: |-
  #   it.strftime(480, 270, id(din_big), TextAlign::CENTER, "%I:%M",id(ntp).now());
  lambda: |-
    #define ICON_music "\U000F0384"
    #define ICON_tv "\U000F0502"

    it.printf(20, 5, id(din_big), "TBSmartHome");

    it.printf(60, 117, id(font_icons), TextAlign::CENTER_RIGHT, ICON_music);
    it.printf(70, 92, id(text_25_bold), "%s", id(sonos_title).state.c_str());
    it.printf(70, 117, id(text_25), "%s", id(sonos_artist).state.c_str());  
    
    it.printf(60, 212, id(font_icons), TextAlign::CENTER_RIGHT, ICON_tv);
    it.printf(70, 188, id(text_25_bold), "%s", id(apple_tv_title).state.c_str());
    it.printf(70, 212, id(text_25), "%s", id(apple_tv_artist).state.c_str());    

    it.printf(330, 272, id(text_25_bold), "Propane: 62%%");
    it.printf(330, 297, id(text_25), "In-Use");

    it.printf(585, 10, id(din_med), "Current Temp: %.2f °C", id(temperature).state);
    it.printf(585, 45, id(text_25), "Min: %.2f °C / Max: %.2f °C", id(min_temp).state, id(max_temp).state);    
    it.printf(585, 70, id(din_med), "Rain Today: %.2f mm", id(rainfall).state);

    it.printf(585, 390, id(din_med), "Rain Probability:");
    it.printf(585, 495, id(text_25_bold), "0hr");
    it.printf(660, 495, id(text_25_bold), "1hr");
    it.printf(740, 495, id(text_25_bold), "2hr");
    it.printf(820, 495, id(text_25_bold), "3hr");
    it.printf(900, 495, id(text_25_bold), "4hr");

    it.line(640, 440, 640, 525);
    it.line(720, 440, 720, 525);
    it.line(800, 440, 800, 525);
    it.line(880, 440, 880, 525);    

    it.strftime(20, 480, id(din_big), TextAlign::BASELINE_LEFT, "%I:%M %p", id(ntp).now());
    it.strftime(20, 520, id(din_med), TextAlign::BASELINE_LEFT, "%B%e, %Y - %A", id(ntp).now());
