---
id: ha_autogroup_monitored_entities
alias: "[HA] Autogroup - Monitored Entities"
description: "Update Monitored Entities Groups automatically"
mode: single
max_exceeded: silent
triggers:
  - platform: homeassistant
    id: startup
    event: start

  - platform: state
    entity_id: input_boolean.ha_startup_pending
    to: "off"

  - platform: event
    event_type: call_service
    event_data:
      domain: group
      service: reload

  - platform: time_pattern
    minutes: "/1"
actions:
  - if: "{{ trigger.id == 'startup' }}"
    then:
      - delay: 240

  # Unavailable Entities
  - service: group.set
    data:
      object_id: monitor_unavailable_entities
      name: "[Group] Monitor - Unavailable Entities"
      icon: mdi:check-circle
      entities: >
        {%- set ignore_seconds = 60 %}
        {%- set ignored = state_attr('group.ignored_unavailable_entities', 'entity_id') %}
        {%- set ignore_ts = (now().timestamp() - ignore_seconds)|as_datetime %}
        {%- set entities = states
            |rejectattr('domain','in',['button', 'conversation', 'device_tracker', 'event', 'group', 'image', 'input_button', 'input_text', 'remote', 'tts', 'scene', 'stt', 'media_player'])
            |selectattr('state','in',['unavailable','unknown','none'])
            |rejectattr('entity_id','in',state_attr('group.ignored_unavailable_entities','entity_id'))
            |rejectattr('entity_id','search','rssfeed_')
            |rejectattr('entity_id','search','button.')
            |rejectattr('entity_id','search','select.')
            |rejectattr('entity_id','search','_color')
            |rejectattr('entity_id','search','wunder')
            |rejectattr('entity_id','search','gosungrow')
            |rejectattr('entity_id','search','z2m')
            |rejectattr('entity_id','search','zigbee2mqtt')
            |rejectattr('entity_id','search','local_stop_zone')
            |rejectattr('entity_id','search','in_radius_zone')
            |rejectattr('entity_id','search','sensor.weather_')
            |rejectattr('entity_id','search','upcoming_sport')
            |rejectattr('entity_id','in',expand(integration_entities('browser_mod'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('gdacs'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('github'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('glances'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('hassio'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('openuv'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('utility_meter'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('waqi'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('tautulli'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('here_travel_time'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('tomorrowio'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('pirateweather'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('proxmoxve'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('blitzortung'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('ble_monitor'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('waternsw'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('ical'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('bureau_of_meteorology'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('weatherflow'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('eufy_security'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('browser_mod'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('mobile_app'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('gtfs2'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('google_fit'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('sensibo'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('astroweather'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('satellitetracker'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('gtfs2'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('openweathermap'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('withings'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('hdhomerun'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('flightradar24'))|map(attribute='entity_id')|list)
            |rejectattr('entity_id','in',expand(integration_entities('bermuda'))|map(attribute='entity_id')|list)
            |rejectattr('last_changed','ge',ignore_ts) %}
        {% set entities =  entities | rejectattr('entity_id', 'in', ignored) if ignored != none else entities %}
        {{ entities | map(attribute='entity_id') | list | sort }}

  # Available Updataes
  - service: group.set
    data:
      object_id: monitor_available_updates
      name: "[Group] Monitor - Available Updates"
      entities: >
        {{ states.update
            | selectattr('state', 'eq', 'on')
            | map(attribute='entity_id') | list | sort }}

  # Offline Integrations
  - service: group.set
    data:
      object_id: monitor_offline_integrations
      name: "[Group] Monitor - Offline Integrations"
      entities: >
        {{ expand('group.connectivity_monitors') | selectattr('state', 'eq', 'off')
            | map(attribute='entity_id') | list | sort }}
