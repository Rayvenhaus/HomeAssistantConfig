---
id: "influx2entity_internetstats365day"
alias: "InfluxDB to Entity: 365 Day Internet Stats"
description: "InfluxDB to Entity: 365 Day Internet Stats"
mode: restart
max_exceeded: warning
trigger:
  - platform: homeassistant
    id: startup
    event: start

  - platform: state
    entity_id: input_boolean.ha_startup_pending
    to: "off"

  - platform: time_pattern
    hours: "/1"

action:
  - if: "{{ trigger.id == 'startup' }}"
    then:
      - delay: 240
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "Mbit/s")
          |> filter(fn: (r) => r["entity_id"] == "speedtest_download")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: max, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "max")
      entity_id: sensor.archive_internet_download_max_365day
      unit_of_measurement: mbit/s
      friendly_name: Internet Download Speed - Max Speed - 365 Day
      icon: "mdi:download-network"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "Mbit/s")
          |> filter(fn: (r) => r["entity_id"] == "speedtest_download")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: min, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "min")
      entity_id: sensor.archive_internet_download_min_365day
      unit_of_measurement: mbit/s
      friendly_name: Internet Download Speed - Min Speed - 365 Day
      icon: "mdi:download-network"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "Mbit/s")
          |> filter(fn: (r) => r["entity_id"] == "speedtest_download")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: mean, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "mean")
      entity_id: sensor.archive_internet_download_mean_365day
      unit_of_measurement: mbit/s
      friendly_name: Internet Download Speed - Mean Speed - 365 Day
      icon: "mdi:download-network"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "Mbit/s")
          |> filter(fn: (r) => r["entity_id"] == "speedtest_upload")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: max, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "max")
      entity_id: sensor.archive_internet_upload_max_365day
      unit_of_measurement: mbit/s
      friendly_name: Internet Upload Speed - Max Speed - 365 Day
      icon: "mdi:upload-network"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "Mbit/s")
          |> filter(fn: (r) => r["entity_id"] == "speedtest_upload")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: min, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "min")
      entity_id: sensor.archive_internet_upload_min_365day
      unit_of_measurement: mbit/s
      friendly_name: Internet Upload Speed - Min Speed - 365 Day
      icon: "mdi:upload-network"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "Mbit/s")
          |> filter(fn: (r) => r["entity_id"] == "speedtest_upload")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: mean, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "mean")
      entity_id: sensor.archive_internet_upload_mean_365day
      unit_of_measurement: mbit/s
      friendly_name: Internet Upload Speed - Mean Speed - 365 Day
      icon: "mdi:upload-network"
