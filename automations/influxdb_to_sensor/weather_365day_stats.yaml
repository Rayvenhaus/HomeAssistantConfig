---
id: "influx2entity_yearlyhomestats"
alias: "InfluxDB to Entity: Yearly Home Weather Stats"
description: "InfluxDB to Entity: Yearly Home Weather Stats"
mode: restart
max_exceeded: warning
trigger:
  - platform: homeassistant
    id: startup
    event: start

  - platform: state
    entity_id: input_boolean.ha_startup_pending
    to: "off"

  - platform: time_pattern
    hours: "/1"

action:
  - if: "{{ trigger.id == 'startup' }}"
    then:
      - delay: 240
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "°C")
          |> filter(fn: (r) => r["entity_id"] == "tempest_st_00056115_temperature")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: min, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "min")
      entity_id: sensor.archive_homeoutsidetemp_min_365day
      unit_of_measurement: °C
      friendly_name: Home - 365 Day - Min Temp
      icon: "mdi:thermometer"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "°C")
          |> filter(fn: (r) => r["entity_id"] == "tempest_st_00056115_temperature")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: max, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "max")
      entity_id: sensor.archive_homeoutsidetemp_max_365day
      unit_of_measurement: °C
      friendly_name: Home - 365 Day - Max Temp
      icon: "mdi:thermometer"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "°C")
          |> filter(fn: (r) => r["entity_id"] == "tempest_st_00056115_temperature")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: spread, createEmpty: true)
          |> fill(value: 0.0)
          |> yield()
      entity_id: sensor.archive_homeoutsidetemp_range_365day
      unit_of_measurement: °C
      friendly_name: Home - 365 Day - Temp Range
      icon: "mdi:thermometer"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "mm")
          |> filter(fn: (r) => r["entity_id"] == "tempest_st_00056115_rain_today")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: max, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "max")
      entity_id: sensor.archive_homerain_365day
      unit_of_measurement: mm
      friendly_name: Home - Year - Rain
      icon: "mdi:water"
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1y)
          |> filter(fn: (r) => r["_measurement"] == "mm")
          |> filter(fn: (r) => r["entity_id"] == "tempest_st_00056115_rain_today")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: max, createEmpty: true)
          |> cumulativeSum()
          |> fill(value: 0.0)
          |> yield(name: "max")
      entity_id: sensor.archive_homerain_365day_cume
      unit_of_measurement: mm
      friendly_name: Home - Year - Rain Cume
      icon: "mdi:water"

