---
type: custom:stack-in-card
cards:
  - type: custom:mushroom-template-card
    primary: Your Spotify Stats
    icon: mdi:spotify
    icon_color: green
    card_mod:
      style: |
        ha-card {
          box-shadow: none !important;
        }
  - type: entities
    card_mod:
      style: &entstyle |
        #states {
          padding-top: 0 !important;
        }
        #states > * {
          margin: 0 !important;
        }
    entities:
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Songs (Today)
          state: >
            {{ state_attr('sensor.yourspotify_topsongs_today', 'data')[0].trackartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topsongs_today
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Track
                data: data
                modify: x.track
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Songs (This Week)
          state: >
            {{ state_attr('sensor.yourspotify_topsongs_thisweek', 'data')[0].trackartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topsongs_thisweek
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Track
                data: data
                modify: x.track
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Songs (This Month)
          state: >
            {{ state_attr('sensor.yourspotify_topsongs_thismonth', 'data')[0].trackartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topsongs_thismonth
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Track
                data: data
                modify: x.track
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Songs (This Year)
          state: >
            {{ state_attr('sensor.yourspotify_topsongs_thisyear', 'data')[0].trackartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topsongs_thisyear
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Track
                data: data
                modify: x.track
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Songs (All Time)
          state: >
            {{ state_attr('sensor.yourspotify_topsongs_alltime', 'data')[0].trackartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topsongs_alltime
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Track
                data: data
                modify: x.track
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }

      - type: section
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Albums (Today)
          state: >
            {{ state_attr('sensor.yourspotify_topalbums_today', 'data')[0].albumartist }}
          icon: mdi:spotify
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topalbums_today
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Album
                data: data
                modify: x.album
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Albums (This Week)
          state: >
            {{ state_attr('sensor.yourspotify_topalbums_thisweek', 'data')[0].albumartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topalbums_thisweek
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Album
                data: data
                modify: x.album
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Albums (This Month)
          state: >
            {{ state_attr('sensor.yourspotify_topalbums_thismonth', 'data')[0].albumartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topalbums_thismonth
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Album
                data: data
                modify: x.album
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Albums (This Year)
          state: >
            {{ state_attr('sensor.yourspotify_topalbums_thisyear', 'data')[0].albumartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topalbums_thisyear
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Album
                data: data
                modify: x.album
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Albums (All Time)
          state: >
            {{ state_attr('sensor.yourspotify_topalbums_alltime', 'data')[0].albumartist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topalbums_alltime
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Album
                data: data
                modify: x.album
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }
      - type: section
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Artists (Today)
          state: >
            {{ state_attr('sensor.yourspotify_topartists_today', 'data')[0].artist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topartists_today
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    days.toString() + "d" + hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Artists (This Week)
          state: >
            {{ state_attr('sensor.yourspotify_topartists_thisweek', 'data')[0].artist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topartists_thisweek
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    days.toString() + "d" + hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Artists (This Month)
          state: >
            {{ state_attr('sensor.yourspotify_topartists_thismonth', 'data')[0].artist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topartists_thismonth
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    days.toString() + "d" + hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Artists (This Year)
          state: >
            {{ state_attr('sensor.yourspotify_topartists_thisyear', 'data')[0].artist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topartists_thisyear
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    days.toString() + "d" + hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Top Artists (All Time)
          state: >
            {{ state_attr('sensor.yourspotify_topartists_alltime', 'data')[0].artist }}
          icon: mdi:spotify
          icon_color: green
          card_mod:
            style: |
              ha-card {
                background: none;
                border: 0;
                box-shadow: none;
              }
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            entities:
              include: sensor.yourspotify_topartists_alltime
            css:
              table+: "border-collapse: collapse; padding: 0px;"
            columns:
              - name: Artist
                data: data
                modify: x.artist
              - name: Plays
                data: data
                modify: x.count
                align: center
              - name: Unique
                data: data
                modify: x.differents
                align: center
              - name: Duration
                data: data
                align: center
                modify: |-
                  {
                    var ms = Number(x.time_listening_ms);
                    const days = Math.floor(ms / (24*60*60*1000));
                    const daysms = ms % (24*60*60*1000);
                    const hours = Math.floor(daysms / (60*60*1000));
                    const hoursms = ms % (60*60*1000);
                    const minutes = Math.floor(hoursms / (60*1000));
                    const minutesms = ms % (60*1000);
                    const sec = Math.floor(minutesms / 1000);
                    days.toString() + "d" + hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                  }
            card_mod:
              style: |
                ha-card {
                  background: none;
                  border: 0;
                  box-shadow: none;
                  overflow: auto;
                  padding-top: 5px;
                  font-size: 12px;
                }
                tbody tr:hover {
                  background-color: coral !important
                }
