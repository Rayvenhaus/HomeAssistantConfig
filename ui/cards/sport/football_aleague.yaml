---
type: vertical-stack
cards:
  - type: custom:bubble-card
    card_type: separator
    styles: |-
      .bubble-line {
        background: var(--ha-card-background);
        opacity: 1;
        }
    name: Football - A-League (Australia)
    icon: mdi:soccer
  - type: custom:tabbed-card
    options: []
    styles:
      --mdc-theme-primary: var(--text-color)
      --mdc-tab-text-label-color-default: var(--disabled-text-color)
    tabs:
      - attributes:
          label: ALM
        card:
          type: vertical-stack
          cards:
            - type: custom:decluttering-card
              template: sports_card
              variables:
                - entity: sensor.upcoming_sport_alm_all_teams
            - type: custom:decluttering-card
              template: sports_card
              variables:
                - entity: sensor.upcoming_sport_sydney_fc
      - attributes:
          label: ALW
        card:
          type: vertical-stack
          cards:
            - type: custom:decluttering-card
              template: sports_card
              variables:
                - entity: sensor.upcoming_sport_alw_all_teams
            - type: custom:decluttering-card
              template: sports_card
              variables:
                - entity: sensor.upcoming_sport_sydney_fc_women
  - type: entities
    entities:
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: A-League Mens
          icon: mdi:soccer
          state: ""
          secondary: >
            {%- for x in state_attr('sensor.scoreboard_alm', 'entries') -%}
            {%- set rank = x['stats']|selectattr("name", "eq", "rank")|map(attribute="value")|first -%}
            {%- if rank == 1.0 -%}
            {{x['team']['displayName']}}, {{x['stats']|selectattr("name", "eq", "points")|map(attribute="displayValue")|first}} Pts
            {%- endif -%}
            {%- endfor -%}
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css:
              table+: "padding: 0px; width: 100%; border-collapse: collapse;"
              tbody tr:nth-child(6): "border-bottom: 2px solid rgb(255,215,0) !important;"
              tbody tr:hover: "background-color: rgba(180, 70, 70,0.2) !important; color:white !important;"
              tbody tr td:nth-child(8): "background-color: rgba(39, 179, 118,0.2); color: white;"
              tbody tr td:nth-child(2)+: "min-width: 1fr; width: 1fr; white-space: nowrap;"
              th+: "border-bottom: 1px solid rgb(127,127,127);"
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_alm
            sort_by: entries
            columns:
              - name: "#"
                data: entries
                modify: x.stats.find(y=>y.name == 'rank').displayValue
                align: center
              - name: Team
                data: entries
                modify: |-
                  if (typeof x.team.logos !== 'undefined')
                    '<div><img src="' + x.team.logos[0].href + '" style="height:20px;vertical-align:middle;">&nbsp;' + x.team.displayName + '</div>'
                  else
                    '<div><span style="display: inline-block;width: 20px;"></span>&nbsp;' + x.team.displayName + '</div>'
              - name: Pl
                data: entries
                modify: x.stats.find(y=>y.name == 'gamesPlayed').displayValue
                align: center
              - name: W
                data: entries
                modify: x.stats.find(y=>y.name == 'wins').displayValue
                align: center
              - name: D
                data: entries
                modify: x.stats.find(y=>y.name == 'ties').displayValue
                align: center
              - name: L
                data: entries
                modify: x.stats.find(y=>y.name == 'losses').displayValue
                align: center
              - name: GD
                data: entries
                modify: |-
                  {
                    x.stats.find(y=>y.name == 'pointsFor').displayValue +
                    ":" +
                    x.stats.find(y=>y.name == 'pointsAgainst').displayValue + "<sub> (" + x.stats.find(y=>y.abbreviation == 'GD').displayValue + ")</sub>"
                  }
                align: center
              - name: Pts
                data: entries
                modify: x.stats.find(y=>y.name == 'points').displayValue
                align: center
              - name: Overall
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'Total').displayValue
                align: center

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: A-League Womens
          icon: mdi:soccer
          state: ""
          secondary: >
            {%- for x in state_attr('sensor.scoreboard_alw', 'entries') -%}
            {%- set rank = x['stats']|selectattr("name", "eq", "rank")|map(attribute="value")|first -%}
            {%- if rank == 1.0 -%}
            {{x['team']['displayName']}}, {{x['stats']|selectattr("name", "eq", "points")|map(attribute="displayValue")|first}} Pts
            {%- endif -%}
            {%- endfor -%}
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css:
              table+: "padding: 0px; width: 100%; border-collapse: collapse;"
              tbody tr:nth-child(4): "border-bottom: 2px solid rgb(255,215,0) !important;"
              tbody tr:hover: "background-color: rgba(180, 70, 70,0.2) !important; color:white !important;"
              tbody tr td:nth-child(8): "background-color: rgba(39, 179, 118,0.2); color: white;"
              tbody tr td:nth-child(2)+: "min-width: 1fr; width: 1fr; white-space: nowrap;"
              th+: "border-bottom: 1px solid rgb(127,127,127);"
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_alw
            sort_by: entries
            columns:
              - name: "#"
                data: entries
                modify: x.stats.find(y=>y.name == 'rank').displayValue
                align: center
              - name: Team
                data: entries
                modify: |-
                  if (typeof x.team.logos !== 'undefined')
                    '<div><img src="' + x.team.logos[0].href + '" style="height:20px;vertical-align:middle;">&nbsp;' + x.team.displayName + '</div>'
                  else
                    '<div><span style="display: inline-block;width: 20px;"></span>&nbsp;' + x.team.displayName + '</div>'
              - name: Pl
                data: entries
                modify: x.stats.find(y=>y.name == 'gamesPlayed').displayValue
                align: center
              - name: W
                data: entries
                modify: x.stats.find(y=>y.name == 'wins').displayValue
                align: center
              - name: D
                data: entries
                modify: x.stats.find(y=>y.name == 'ties').displayValue
                align: center
              - name: L
                data: entries
                modify: x.stats.find(y=>y.name == 'losses').displayValue
                align: center
              - name: GD
                data: entries
                modify: |-
                  {
                    x.stats.find(y=>y.name == 'pointsFor').displayValue +
                    ":" +
                    x.stats.find(y=>y.name == 'pointsAgainst').displayValue + "<sub> (" + x.stats.find(y=>y.abbreviation == 'GD').displayValue + ")</sub>"
                  }
                align: center
              - name: Pts
                data: entries
                modify: x.stats.find(y=>y.name == 'points').displayValue
                align: center
              - name: Overall
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'Total').displayValue
                align: center
