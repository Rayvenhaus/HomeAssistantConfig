---
type: vertical-stack
cards:
  - type: custom:bubble-card
    card_type: separator
    styles: |-
      .bubble-line {
        background: var(--ha-card-background);
        opacity: 1;
        }
    name: NHL
    icon: mdi:hockey-puck

  - type: custom:stack-in-card
    card_mod:
      style:
        .: |
          ha-card {
          padding-bottom: 10px !important;
          }
    cards:
      - type: custom:decluttering-card
        template: sports_card
        variables:
          - entity: sensor.upcoming_sport_nhl_all_teams
          - calendar: calendar.ical_nhl_all_teams
      - type: custom:mushroom-chips-card
        alignment: center
        card_mod:
          style: |
            mushroom-template-chip {
              width: 100%;
            }
            div.chip-container {
              justify-content: space-evenly;
              flex-wrap: nowrap;
            }
            ha-card {
              margin: 0px 10px 2px 10px;
              --chip-spacing: 5px !important;
            }
        chips:
          - type: template
            icon: mdi:calendar-alert
            content: Calendar
            card_mod: &style
              style:
                .: |
                  ha-card {
                    background-color: rgb(80, 110, 172) !important;
                    box-shadow: none !important;
                    justify-content: center;
                    height: 30px !important;
                    border: 0 !important;
                    box-shadow: none !important;
                    border-radius: 10px !important;
                  }
            tap_action: !include /config/ui/cards/sport/snippets/icehockey/nhl_calendar.yaml
            hold_action:
              action: none
            double_tap_action:
              action: none

          - type: template
            hold_action:
              action: none
            double_tap_action:
              action: none
            icon: mdi:ticket
            content: Recent Results
            card_mod: *style
            tap_action: !include /config/ui/cards/sport/snippets/icehockey/nhl_recentresults.yaml

  - type: entities
    entities:
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Overall
          icon: mdi:hockey-puck
          state: ""
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css: &nhlcss
              table+: "padding: 0px; width: 100%; border-collapse: collapse;"
              tbody tr+: "user-select: text"
              tbody tr td:nth-child(2)+: "min-width: 1fr;width: 1fr; white-space: nowrap;"
              tbody tr:hover: "background-color: rgba(180, 70, 70,0.2) !important; color:white !important;"
              th+: "border-bottom: 1px solid rgb(127,127,127);"
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_nhl_*
            sort_by: entries-
            columns: &nhlcols
              - hidden: true
                name: sort
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'PTS').displayValue
              - name: >-
                  <div>C</div>
                data: entries
                modify: >-
                  if(typeof x.stats.find(y=>y.abbreviation == 'CLINCH') !==
                  'undefined' ){x.stats.find(y=>y.abbreviation ==
                  'CLINCH').displayValue}else{'-'}
              - name: Team
                data: entries
                modify: >-
                  '<div><a href="' + x.team.links[0].href + '" target="_blank"><img
                  src="' + x.team.logos[0].href + '" style="height:
                  20px;vertical-align:middle;"></a>&nbsp;' + x.team.displayName +
                  '</div>'
              - name: <div>GP</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'GP').displayValue
              - name: <div>W</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'W').displayValue
              - name: <div>L</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'L').displayValue
              - name: <div>OTL</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'OTL').displayValue
              - name: <div>PTS</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'PTS').displayValue
              - name: <div>RW</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'RW').displayValue
              - name: <div>ROW</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'ROW').displayValue
              - name: <div>SOW</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'SOW').displayValue
              - name: <div>SOL</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'SOL').displayValue
              - name: <div>HOME</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'HOME').displayValue
              - name: <div>AWAY</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'AWAY').displayValue
              - name: <div>GF</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'GF').displayValue
              - name: <div>GA</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'GA').displayValue
              - name: <div>DIFF</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'DIFF').displayValue
              - name: <div>L10</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'L10').summary
              - name: <div>STRK</div>
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'STRK').displayValue
      - type: section
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Eastern Conference
          icon: mdi:hockey-puck
          state: ""
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css: *nhlcss
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_nhl_east_*
            sort_by: entries-
            columns: *nhlcols
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Eastern Conference, Atlantic Division
          icon: mdi:hockey-puck
          state: ""
          secondary: >
            {%- for x in state_attr('sensor.scoreboard_nhl_east_atlantic', 'entries') -%}
            {%- set rank = x['stats']|selectattr("abbreviation", "eq", "GB")|map(attribute="value")|first -%}
            {%- if rank == 0.0 -%}
            {{x['team']['displayName']}}, {{x['stats']|selectattr("abbreviation", "eq", "PTS")|map(attribute="displayValue")|first}} Pts
            {%- endif -%}
            {%- endfor -%}
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css: *nhlcss
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_nhl_east_atlantic
            sort_by: entries-
            columns: *nhlcols
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Eastern Conference, Metropolitan Division
          icon: mdi:hockey-puck
          state: ""
          secondary: >
            {%- for x in state_attr('sensor.scoreboard_nhl_east_metropolitan', 'entries') -%}
            {%- set rank = x['stats']|selectattr("abbreviation", "eq", "GB")|map(attribute="value")|first -%}
            {%- if rank == 0.0 -%}
            {{x['team']['displayName']}}, {{x['stats']|selectattr("abbreviation", "eq", "PTS")|map(attribute="displayValue")|first}} Pts
            {%- endif -%}
            {%- endfor -%}
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css: *nhlcss
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_nhl_east_metropolitan
            sort_by: entries-
            columns: *nhlcols
      - type: section
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Western Conference
          icon: mdi:hockey-puck
          state: ""
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css: *nhlcss
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_nhl_west_*
            sort_by: entries-
            columns: *nhlcols
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Western Conference, Central Division
          icon: mdi:hockey-puck
          state: ""
          secondary: >
            {%- for x in state_attr('sensor.scoreboard_nhl_west_central', 'entries') -%}
            {%- set rank = x['stats']|selectattr("abbreviation", "eq", "GB")|map(attribute="value")|first -%}
            {%- if rank == 0.0 -%}
            {{x['team']['displayName']}}, {{x['stats']|selectattr("abbreviation", "eq", "PTS")|map(attribute="displayValue")|first}} Pts
            {%- endif -%}
            {%- endfor -%}
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css: *nhlcss
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_nhl_west_central
            sort_by: entries-
            columns: *nhlcols
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Western Conference, Pacific Division
          icon: mdi:hockey-puck
          state: ""
          secondary: >
            {%- for x in state_attr('sensor.scoreboard_nhl_west_pacific', 'entries') -%}
            {%- set rank = x['stats']|selectattr("abbreviation", "eq", "GB")|map(attribute="value")|first -%}
            {%- if rank == 0.0 -%}
            {{x['team']['displayName']}}, {{x['stats']|selectattr("abbreviation", "eq", "PTS")|map(attribute="displayValue")|first}} Pts
            {%- endif -%}
            {%- endfor -%}
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css: *nhlcss
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_nhl_west_pacific
            sort_by: entries-
            columns: *nhlcols

  - type: custom:stack-in-card
    card_mod:
      style:
        .: |
          ha-card {
          padding-bottom: 10px !important;
          }
    cards:
      - type: custom:decluttering-card
        template: sports_card
        variables:
          - entity: sensor.upcoming_sport_anaheim_ducks
          - calendar: calendar.ical_anaheim_ducks
      - type: custom:mushroom-chips-card
        alignment: center
        card_mod:
          style: |
            mushroom-template-chip {
              width: 100%;
            }
            div.chip-container {
              justify-content: space-evenly;
              flex-wrap: nowrap;
            }
            ha-card {
              margin: 0px 10px 2px 10px;
              --chip-spacing: 5px !important;
            }
        chips:
          - type: template
            icon: mdi:calendar-alert
            content: Calendar
            card_mod:
              style:
                .: |
                  ha-card {
                    background-color: rgb(80, 110, 172) !important;
                    box-shadow: none !important;
                    justify-content: center;
                    height: 30px !important;
                    border: 0 !important;
                    box-shadow: none !important;
                    border-radius: 10px !important;
                  }
            tap_action: !include /config/ui/cards/sport/snippets/icehockey/nhl_ducks_calendar.yaml
            hold_action:
              action: none
            double_tap_action:
              action: none

  - type: custom:stack-in-card
    card_mod:
      style:
        .: |
          ha-card {
          padding-bottom: 10px !important;
          }
    cards:
      - type: custom:decluttering-card
        template: sports_card
        variables:
          - entity: sensor.upcoming_sport_toronto_maple_leafs
          - calendar: calendar.ical_toronto_maple_leafs
      - type: custom:mushroom-chips-card
        alignment: center
        card_mod:
          style: |
            mushroom-template-chip {
              width: 100%;
            }
            div.chip-container {
              justify-content: space-evenly;
              flex-wrap: nowrap;
            }
            ha-card {
              margin: 0px 10px 2px 10px;
              --chip-spacing: 5px !important;
            }
        chips:
          - type: template
            icon: mdi:calendar-alert
            content: Calendar
            card_mod:
              style:
                .: |
                  ha-card {
                    background-color: rgb(80, 110, 172) !important;
                    box-shadow: none !important;
                    justify-content: center;
                    height: 30px !important;
                    border: 0 !important;
                    box-shadow: none !important;
                    border-radius: 10px !important;
                  }
            tap_action: !include /config/ui/cards/sport/snippets/icehockey/nhl_toronto_calendar.yaml
            hold_action:
              action: none
            double_tap_action:
              action: none
