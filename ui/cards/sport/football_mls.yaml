---
type: vertical-stack
cards:
  - type: custom:bubble-card
    card_type: separator
    styles: |-
      .bubble-line {
        background: var(--ha-card-background);
        opacity: 1;
        }
    name: Football - MLS (US)
    icon: mdi:soccer
  - type: custom:decluttering-card
    template: sports_card
    variables:
      - entity: sensor.upcoming_sport_mls_all_teams
  - type: custom:yet-another-expander-card
    gap: 0.6em
    padding: 0
    clear: false
    title: Expander
    overlay-margin: 0em
    child-padding: 0.5em
    button-background: transparent
    title-card:
      type: custom:mushroom-template-card
      primary: MLS Schedule
      icon: mdi:soccer
      card_mod:
        style:
          .: |
            ha-card {
              # background-color: var(--background-color);
              box-shadow: none;
            }
    cards:
      - type: custom:flex-table-card
        css:
          table+: "padding: 0px; width: 100%; border-collapse: collapse;"
          tbody tr:hover: "background-color: rgba(180, 70, 70,0.2) !important; color:white !important;"
          tbody tr td:nth-child(1): "min-width: 1fr;width: 1fr; white-space: nowrap;"
          tbody tr td:nth-child(3): "min-width: 1fr;width: 1fr; white-space: nowrap; background-color: rgba(39, 179, 118,0.2); color: white;"
          th+: "border-bottom: 1px solid rgb(127,127,127);"
        card_mod:
          style:
            .: |
              ha-card {
                overflow: auto;
                box-shadow: none !important;
                font-size: 13px;
                }
        entities:
          include: sensor.sportschedule_mls
        sort_by: entries
        columns:
          - name: Date
            data: events
            modify: |-
              if(x.date == 0)
              {"-"}
              else {
                var date = new Date(x.date);
                date.toLocaleDateString('en-US', {weekday: 'short', month: 'short', day: 'numeric'}) +
                " @ "+
                String(date.getHours()).padStart(2,'0')+":"+
                String(date.getMinutes()).padStart(2,'0')
              }
            align: center
          - name: Home Team
            data: events
            align: right
            modify: |-
              if (typeof x.competitions[0].competitors[0].team.logo !== 'undefined')
                '<div>' + x.competitions[0].competitors[0].team.displayName +'&nbsp<img src="' + x.competitions[0].competitors[0].team.logo + '" style="height:20px;vertical-align:middle;"></div>'
              else
                '<div><span style="display: inline-block;width: 20px;"></span>&nbsp;' + x.competitions[0].competitors[0].team.displayName + '</div>'
          - name: Match
            data: events
            align: center
            modify: |-
              if (x.status.type.description == 'Scheduled')
                ' VS '
              else
                x.competitions[0].competitors[0].score + " - " + x.competitions[0].competitors[1].score
          - name: Away Team
            data: events
            align: left
            modify: |-
              if (typeof x.competitions[0].competitors[1].team.logo !== 'undefined')
                '<div><img src="' + x.competitions[0].competitors[1].team.logo + '" style="height:20px;vertical-align:middle;">&nbsp;' + x.competitions[0].competitors[1].team.displayName + '</div>'
              else
                '<div><span style="display: inline-block;width: 20px;"></span>&nbsp;' + x.competitions[0].competitors[1].team.displayName + '</div>'
          - name: Time
            data: events
            align: center
            modify: x.status.type.description
          - name: Venue
            data: events
            modify: >-
              x.competitions[0].venue.fullName + " (" +
              x.competitions[0].venue.address.city + ")"

  - type: entities
    card_mod:
      style: |
        #states > * {
          margin: 0 !important;
        }
    entities:
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Major League Soccer
          icon: mdi:soccer
          state: ""
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css:
              table+: "padding: 0px; width: 100%; border-collapse: collapse;"
              tbody tr:hover: "background-color: rgba(180, 70, 70,0.2) !important; color:white !important;"
              tbody tr td:nth-child(8): "background-color: rgba(39, 179, 118,0.2); color: white;"
              tbody tr td:nth-child(2)+: "min-width: 1fr; width: 1fr; white-space: nowrap;"
              th+: "border-bottom: 1px solid rgb(127,127,127);"
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_mls_*
            sort_by: entries
            columns:
              - hidden: true
                data: entries
                modify: x.stats.find(y=>y.name == 'points').value.toFixed(2)
              - name: Team
                data: entries
                modify: |-
                  if (typeof x.team.logos !== 'undefined')
                    '<div><img src="' + x.team.logos[0].href + '" style="height:20px;vertical-align:middle;">&nbsp;' + x.team.displayName + '</div>'
                  else
                    '<div><span style="display: inline-block;width: 20px;"></span>&nbsp;' + x.team.displayName + '</div>'
              - name: Pl
                data: entries
                modify: x.stats.find(y=>y.name == 'gamesPlayed').displayValue
                align: center
              - name: W
                data: entries
                modify: x.stats.find(y=>y.name == 'wins').displayValue
                align: center
              - name: D
                data: entries
                modify: x.stats.find(y=>y.name == 'ties').displayValue
                align: center
              - name: L
                data: entries
                modify: x.stats.find(y=>y.name == 'losses').displayValue
                align: center
              - name: GD
                data: entries
                modify: |-
                  {
                    x.stats.find(y=>y.name == 'pointsFor').displayValue +
                    ":" +
                    x.stats.find(y=>y.name == 'pointsAgainst').displayValue + "<sub> (" + x.stats.find(y=>y.abbreviation == 'GD').displayValue + ")</sub>"
                  }
                align: center
              - name: Pts
                data: entries
                modify: x.stats.find(y=>y.name == 'points').displayValue
                align: center
              - name: Overall
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'Total').displayValue
                align: center
      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Major League Soccer, Eastern Conference
          icon: mdi:soccer
          state: ""
          secondary: >
            {%- for x in state_attr('sensor.scoreboard_mls_eastern', 'entries') -%}
            {%- set rank = x['stats']|selectattr("name", "eq", "rank")|map(attribute="value")|first -%}
            {%- if rank == 1.0 -%}
            {{x['team']['displayName']}}, {{x['stats']|selectattr("name", "eq", "points")|map(attribute="displayValue")|first}} Pts
            {%- endif -%}
            {%- endfor -%}
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css:
              table+: "padding: 0px; width: 100%; border-collapse: collapse;"
              tbody tr:nth-child(1): "border-bottom: 2px solid rgb(255,215,0) !important;"
              tbody tr:nth-child(7): "border-bottom: 2px solid rgb(255,215,0) !important;"
              tbody tr:nth-child(9): "border-bottom: 2px solid rgb(255,215,0) !important;"
              tbody tr:hover: "background-color: rgba(180, 70, 70,0.2) !important; color:white !important;"
              tbody tr td:nth-child(8): "background-color: rgba(39, 179, 118,0.2); color: white;"
              tbody tr td:nth-child(2)+: "min-width: 1fr; width: 1fr; white-space: nowrap;"
              th+: "border-bottom: 1px solid rgb(127,127,127);"
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_mls_eastern
            sort_by: entries
            columns:
              - name: "#"
                data: entries
                modify: x.stats.find(y=>y.name == 'rank').displayValue
                align: center
              - name: Team
                data: entries
                modify: |-
                  if (typeof x.team.logos !== 'undefined')
                    '<div><img src="' + x.team.logos[0].href + '" style="height:20px;vertical-align:middle;">&nbsp;' + x.team.displayName + '</div>'
                  else
                    '<div><span style="display: inline-block;width: 20px;"></span>&nbsp;' + x.team.displayName + '</div>'
              - name: Pl
                data: entries
                modify: x.stats.find(y=>y.name == 'gamesPlayed').displayValue
                align: center
              - name: W
                data: entries
                modify: x.stats.find(y=>y.name == 'wins').displayValue
                align: center
              - name: D
                data: entries
                modify: x.stats.find(y=>y.name == 'ties').displayValue
                align: center
              - name: L
                data: entries
                modify: x.stats.find(y=>y.name == 'losses').displayValue
                align: center
              - name: GD
                data: entries
                modify: |-
                  {
                    x.stats.find(y=>y.name == 'pointsFor').displayValue +
                    ":" +
                    x.stats.find(y=>y.name == 'pointsAgainst').displayValue + "<sub> (" + x.stats.find(y=>y.abbreviation == 'GD').displayValue + ")</sub>"
                  }
                align: center
              - name: Pts
                data: entries
                modify: x.stats.find(y=>y.name == 'points').displayValue
                align: center
              - name: Overall
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'Total').displayValue
                align: center

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: Major League Soccer, Western Conference
          icon: mdi:soccer
          state: ""
          secondary: >
            {%- for x in state_attr('sensor.scoreboard_mls_western', 'entries') -%}
            {%- set rank = x['stats']|selectattr("name", "eq", "rank")|map(attribute="value")|first -%}
            {%- if rank == 1.0 -%}
            {{x['team']['displayName']}}, {{x['stats']|selectattr("name", "eq", "points")|map(attribute="displayValue")|first}} Pts
            {%- endif -%}
            {%- endfor -%}
        padding: 0
        entities:
          - type: custom:hui-element
            card_type: custom:flex-table-card
            css:
              table+: "padding: 0px; width: 100%; border-collapse: collapse;"
              tbody tr:nth-child(1): "border-bottom: 2px solid rgb(255,215,0) !important;"
              tbody tr:nth-child(7): "border-bottom: 2px solid rgb(255,215,0) !important;"
              tbody tr:nth-child(9): "border-bottom: 2px solid rgb(255,215,0) !important;"
              tbody tr:hover: "background-color: rgba(180, 70, 70,0.2) !important; color:white !important;"
              tbody tr td:nth-child(8): "background-color: rgba(39, 179, 118,0.2); color: white;"
              tbody tr td:nth-child(2)+: "min-width: 1fr; width: 1fr; white-space: nowrap;"
              th+: "border-bottom: 1px solid rgb(127,127,127);"
            card_mod:
              style:
                .: |
                  ha-card {
                    overflow: auto;
                    box-shadow: none !important;
                    font-size: 13px;
                    }
            entities:
              include: sensor.scoreboard_mls_western
            sort_by: entries
            columns:
              - name: "#"
                data: entries
                modify: x.stats.find(y=>y.name == 'rank').displayValue
                align: center
              - name: Team
                data: entries
                modify: |-
                  if (typeof x.team.logos !== 'undefined')
                    '<div><img src="' + x.team.logos[0].href + '" style="height:20px;vertical-align:middle;">&nbsp;' + x.team.displayName + '</div>'
                  else
                    '<div><span style="display: inline-block;width: 20px;"></span>&nbsp;' + x.team.displayName + '</div>'
              - name: Pl
                data: entries
                modify: x.stats.find(y=>y.name == 'gamesPlayed').displayValue
                align: center
              - name: W
                data: entries
                modify: x.stats.find(y=>y.name == 'wins').displayValue
                align: center
              - name: D
                data: entries
                modify: x.stats.find(y=>y.name == 'ties').displayValue
                align: center
              - name: L
                data: entries
                modify: x.stats.find(y=>y.name == 'losses').displayValue
                align: center
              - name: GD
                data: entries
                modify: |-
                  {
                    x.stats.find(y=>y.name == 'pointsFor').displayValue +
                    ":" +
                    x.stats.find(y=>y.name == 'pointsAgainst').displayValue + "<sub> (" + x.stats.find(y=>y.abbreviation == 'GD').displayValue + ")</sub>"
                  }
                align: center
              - name: Pts
                data: entries
                modify: x.stats.find(y=>y.name == 'points').displayValue
                align: center
              - name: Overall
                data: entries
                modify: x.stats.find(y=>y.abbreviation == 'Total').displayValue
                align: center
