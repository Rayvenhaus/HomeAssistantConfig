---
type: custom:mushroom-chips-card
view_layout:
  grid-area: header-right
alignment: middle
chips:
  - type: template
    icon: mdi:trash-can
    icon_color: |
      {%- if state_attr('sensor.binday_recycling', 'days') | int < 7 %}
        yellow
      {%- else %}
        green
      {%- endif %}
    tap_action:
      action: none
    card_mod:
      style: |
        ha-card {
          {%- if state_attr('sensor.binday_recycling', 'days') | int < 7 or state_attr('sensor.binday_greenwaste', 'days') | int > 7 %}
            --chip-background: rgba(var(--rgb-yellow), 0.2);
          {%- else %}
            --chip-background: rgba(var(--rgb-green), 0.2);
          {%- endif %}
        }
        ha-card:after {
          {%- if state_attr('sensor.binday_recycling', 'days') | int < 7 or state_attr('sensor.binday_greenwaste', 'days') | int > 7 %}
          content: "{{ state_attr('sensor.binday_recycling', 'days') }}";
          {%- else %}
          content: "{{ state_attr('sensor.binday_greenwaste', 'days') }}";
          {%- endif %}
          position: absolute;
          display: flex;
          justify-content: center;
          align-items: center;
          background: red;
          color: white;
          font-weight: bolder;
          border-radius: 50%;
          top: -6px;
          right: -6px;
          width: 16px;
          height: 16px;
          font-size: 11px;
        }
  # - type: template
  #   icon: mdi:power-plug
  #   icon_color: green
  #   tap_action:
  #     action: none
  #   card_mod:
  #     style: |
  #       ha-card {
  #         --chip-background: rgba(var(--rgb-green), 0.2);
  #       }
  # - type: template
  #   icon: mdi:home-assistant
  #   icon_color: teal
  #   tap_action:
  #     action: navigate
  #     navigation_path: homeassistant
  #   card_mod:
  #     style: |
  #       ha-card {
  #         --chip-background: rgba(var(--rgb-teal), 0.2);
  #       }
  #       ha-card:after {
  #         content: "{{ states('sensor.ha_update_counter_hacs') | int + states('sensor.ha_update_counter_ha') | int  }}";
  #         position: absolute;
  #         display: flex;
  #         justify-content: center;
  #         align-items: center;
  #         background: rgb(var(--rgb-orange));
  #         color: var(--card-background-color);
  #         font-weight: bolder;
  #         border-radius: 50%;
  #         top: -5px;
  #         right: -5px;
  #         width: 16px;
  #         height: 16px;
  #         font-size: 11px;
  #       }
  # - type: template
  #   icon: mdi:docker
  #   icon_color: lightblue
  #   tap_action:
  #     action: navigate
  #     navigation_path: server
  #   card_mod:
  #     style: |
  #       ha-card {
  #         --chip-background: rgba(var(--rgb-teal), 0.2);
  #       }
  #       ha-card:after {
  #         content: "{{ state_attr('sensor.stats_docker', 'containers_updatable') | int  }}";
  #         position: absolute;
  #         display: flex;
  #         justify-content: center;
  #         align-items: center;
  #         background: rgb(var(--rgb-orange));
  #         color: var(--card-background-color);
  #         font-weight: bolder;
  #         border-radius: 50%;
  #         top: -5px;
  #         right: -5px;
  #         width: 16px;
  #         height: 16px;
  #         font-size: 11px;
  #       }
  - type: template
    entity: group.media_players
    icon: >-
      {{ 'mdi:television' if is_state('group.media_players', 'on')
      else 'mdi:television-off' }}
    icon_color: >-
      {{ 'orange' if is_state('group.media_players', 'on') else
      'disabled' }}
    layout: vertical
    badge_color: >-
      {{ 'orange' if is_state('group.media_players', 'on') else 'none'
      }}
    badge_icon: transparent
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          title: Media
          content:
            type: custom:auto-entities
            filter:
              include:
                - group: group.media_players
                  options:
                    type: custom:mushroom-media-player-card
                    icon: mdi:television
                    use_media_info: true
                    show_volume_level: true
                    volume_controls:
                      - volume_buttons
                      - volume_set
                    media_controls:
                      - on_off
                      - play_pause_stop
              exclude: []
            card_param: cards
            sort:
              method: friendly_name
            show_empty: true
            card:
              square: false
              columns: 2
              type: grid

    card_mod:
      style: |
        {% if expand(states.group.media_players) | selectattr( 'state', 'eq', 'playing') | list | count > 0 %}
        ha-card:after {
          content: "{{ expand(states.group.media_players) | selectattr( 'state', 'eq', 'playing') | list | count }}";
          position: absolute;
          display: flex;
          justify-content: center;
          align-items: center;
          background: rgb(var(--rgb-orange));
          color: var(--card-background-color);
          font-weight: bolder;
          border-radius: 50%;
          top: -5px;
          right: -5px;
          width: 16px;
          height: 16px;
          font-size: 11px;
        }
        {% endif %}
  - type: template
    entity: light.all_lights
    icon: >-
      {{ 'mdi:lightbulb' if is_state('light.all_lights', 'on') else
      'mdi:lightbulb-off' }}

    icon_color: "{{ 'orange' if is_state('light.all_lights', 'on') else 'disabled' }}"
    badge_icon: transparent
    badge_color: "{{ 'orange' if is_state('light.all_lights', 'on') else 'none' }}"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          title: Lights
          content:
            type: vertical-stack
            cards:
              - type: custom:mushroom-light-card
                icon_color: amber
                entity: light.all_lights
                name: Control All Lights
                fill_container: true
                use_light_color: true
                show_brightness_control: true
                collapsible_controls: true
                show_color_control: false
              - type: custom:expander-card
                gap: ""
                padding: ""
                clear: true
                title: ""
                overlay-margin: 2em
                child-padding: ""
                button-background: transparent
                expanded: true
                title-card:
                  type: custom:mushroom-title-card
                  title: ""
                  subtitle: Lights Turned On
                cards:
                  - type: custom:auto-entities
                    filter:
                      include:
                        - domain: light
                          state: "on"
                          group: light.all_lights
                          options:
                            type: custom:mushroom-light-card
                            icon_color: amber
                            use_light_color: true
                            collapsible_controls: true
                      exclude: []
                    card:
                      square: false
                      columns: 2
                      type: grid
                    show_empty: true
                    card_param: cards
                    sort:
                      method: friendly_name
              - type: custom:expander-card
                gap: ""
                padding: ""
                clear: true
                title: ""
                overlay-margin: 2em
                child-padding: ""
                button-background: transparent
                expanded: false
                title-card:
                  type: custom:mushroom-title-card
                  title: ""
                  subtitle: Lights Turned Off
                cards:
                  - type: custom:auto-entities
                    filter:
                      include:
                        - domain: light
                          state: "off"
                          group: light.all_lights
                          options:
                            type: custom:mushroom-light-card
                            icon_color: amber
                            use_light_color: true
                            collapsible_controls: true
                      exclude: []
                    card:
                      square: false
                      columns: 2
                      type: grid
                    show_empty: true
                    card_param: cards
                    sort:
                      method: friendly_name

    card_mod:
      style: |
        {% if is_state('light.all_lights', 'on') %}
        ha-card:after {
          content: "{{ expand(states.light.all_lights) | selectattr( 'state', 'eq', 'on') | list | count }}";
          position: absolute;
          display: flex;
          justify-content: center;
          align-items: center;
          background: rgb(var(--rgb-orange));
          color: var(--card-background-color);
          font-weight: bolder;
          border-radius: 50%;
          top: -5px;
          right: -5px;
          width: 16px;
          height: 16px;
          font-size: 11px;
        }
        {% endif %}
  - type: template
    icon: mdi:cog
    layout: vertical
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          title: Settings
          content:
            type: grid
            square: false
            columns: 2
            cards:
              - show_name: true
                show_icon: true
                type: button
                tap_action:
                  action: toggle
                entity: button.homeassistant_reload
                name: Reload HA
                show_state: false
              - show_name: true
                show_icon: true
                type: button
                tap_action:
                  action: toggle
                entity: button.homeassistant_restart
                name: Restart HA

