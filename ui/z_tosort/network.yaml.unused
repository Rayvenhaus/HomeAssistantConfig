---
# MAXIMALIST DASHBOARD
# Network View
# Made by Madelena Mak 2022

title: Network
path: "network"
icon: mdi:lan-connect
theme: "Fluent Red"

type: "custom:grid-layout"
layout: !include snippets/layout-page-margin.yaml

cards:
  - type: "custom:layout-card"
    layout_type: "custom:grid-layout"
    view_layout:
      grid-area: cc
    layout:
      grid-template-columns: "repeat(auto-fill, [col-start] minmax(400px, 1fr) [col-end])"
      grid-template-rows: auto
      grid-column-gap: 32px
      margin: -1px
      mediaquery:
        "(max-width: 800px)":
          grid-template-columns: "repeat(auto-fill, [col-start] minmax(256px, 1fr) [col-end])"

    cards:
      # [Header] Summary
      - type: "custom:layout-card"
        layout_type: "custom:grid-layout"
        layout: !include snippets/layout-page-title.yaml
        view_layout:
          grid-column: 1/-1
        cards:
          - type: markdown
            content: >
              # Network

              The Internet is {{ states('binary_sensor.ping_cloudflare') }}
              and {{ states('sensor.asuswrt_devices_connected') }} devices
              are connected.{%- if states('sensor.speedtest_download') !=
              'unavailable' -%}{{ ' ' }}The speed is {{ iif(
              states('sensor.speedtest_download')|int >= 22, 'normal',
              'slower than usual') }}.{%- endif -%}
            style:
              .: |
                ha-card {
                  background: none;
                }
              ha-markdown$: |
                h1 {
                  font-size: var(--title-font-size);
                  font-weight: 500;
                  line-height: 1.1;
                  margin-left: -2px;
                  margin-block-end: -8px;
                }

      # [Column] Network Map
      - type: vertical-stack
        # view_layout:
        #   grid-column: 1/-1
        # card_mod:
        #   style: |
        #     :host {max-height: 320px;}
        #     ha-card {max-height: 320px; overflow: visible;}
        cards:
          - type: "custom:button-card"
            template: header_card_no_link
            variables:
              name: MAP
            view_layout:
              grid-column: 1/-1

          - type: entities
            card_mod:
              style: |
                #states > * {margin: 0 !important;}
                #states {
                  padding-top: 0 !important;
                  xtransform: rotate(90deg) translateY(-100%);
                  xtransform-origin: top left;
                }
                ha-card {background: none; xmax-height: 320px;}
            entities:
              - entity: binary_sensor.ping_cloudflare
                type: "custom:button-card"
                template: rail_station_row
                variables:
                  rail0_entity: binary_sensor.ping_cloudflare
                  station_rail: 0
                  terminate_at: top terminal
                label: 1.1.1.1
                state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              - entity: binary_sensor.ping_google
                type: "custom:button-card"
                template: rail_station_row
                variables:
                  rail0_entity: binary_sensor.ping_cloudflare
                  rail1_entity: binary_sensor.ping_google
                  station_rail: 1
                  terminate_at: top
                label: "[[[ entity.last_changed ]]]"
                state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              # - entity: binary_sensor.ping_my_website
              #   type: "custom:button-card"
              #   template: rail_station_row
              #   variables:
              #     rail0_entity: binary_sensor.ping_cloudflare
              #     rail1_entity: binary_sensor.ping_google
              #     rail2_entity: binary_sensor.ping_my_website
              #     station_rail: 2
              #     terminate_at: top
              #   label: "[[[ entity.last_changed ]]]"
              #   state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              - entity: sensor.unifi_dream_machine_external_ip
                type: "custom:button-card"
                template: rail_interchange_row
                variables:
                  rail0_top_entity: binary_sensor.ping_cloudflare
                  rail1_top_entity: binary_sensor.ping_google
                  # rail2_top_entity: binary_sensor.ping_my_website
                  rail3_bottom_entity: binary_sensor.ping_modem
                  station_size_from: 0
                  station_size_to: 3
                label: "[[[ return entity.state ]]]"
                state_display: " "
                styles:
                  custom_fields:
                    station:
                      - background-color: '[[[ return entity.state != "unavailable" ? "var(--primary-color)" : "var(--disabled-color)" ]]]'

              - entity: binary_sensor.ping_modem
                type: "custom:button-card"
                template: rail_station_row
                variables:
                  rail3_entity: binary_sensor.ping_modem
                  station_rail: 3
                name: Modem
                label: 192.168.1.1
                state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              - type: "custom:button-card"
                template: rail_section_row
                variables:
                  rail3_entity: binary_sensor.ping_modem
                name: Firewall

              - entity: switch.adguard_protection
                type: "custom:button-card"
                template: rail_section_row
                variables:
                  rail3_entity: binary_sensor.ping_modem
                  station_rail: 3
                name: AdGuard DNS
                styles:
                  custom_fields:
                    station:
                      - --station-color: '[[[ return entity.state == "on" ? "var(--primary-color)" : "var(--disabled-color)" ]]]'

              # - entity: binary_sensor.ping_valhalla_router
              #   type: "custom:button-card"
              #   template: rail_interchange_row
              #   variables:
              #     rail0_bottom_entity: binary_sensor.ping_kitchen_mesh_repeater
              #     rail1_bottom_entity: binary_sensor.ping_blue_cave_mesh
              #     rail2_bottom_entity: binary_sensor.ping_valhalla_outlet
              #     rail3_bottom_entity: binary_sensor.ping_valhalla_router
              #     rail3_top_entity: binary_sensor.ping_modem
              #     station_size_from: 0
              #     station_size_to: 3
              #   name: Router
              #   label: 192.168.1.1
              #   state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              # - entity: binary_sensor.ping_valhalla_outlet
              #   type: "custom:button-card"
              #   template: rail_station_row
              #   variables:
              #     rail0_entity: binary_sensor.ping_kitchen_mesh_repeater
              #     rail1_entity: binary_sensor.ping_blue_cave_mesh
              #     rail2_entity: binary_sensor.ping_valhalla_outlet
              #     rail3_entity: binary_sensor.ping_valhalla_router
              #     station_rail: 2
              #     terminate_at: bottom
              #   name: Outlet
              #   label: 192.168.1.1
              #   state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              # - entity: binary_sensor.ping_valhalla_router
              #   type: "custom:button-card"
              #   template: rail_station_row
              #   variables:
              #     rail0_entity: binary_sensor.ping_kitchen_mesh_repeater
              #     rail1_entity: binary_sensor.ping_blue_cave_mesh
              #     rail3_entity: binary_sensor.ping_valhalla_router
              #     station_rail: 3
              #     terminate_at: bottom
              #   name: Unison
              #   label: 192.168.1.1
              #   state_display: "-"

              # - entity: binary_sensor.ping_blue_cave_mesh
              #   type: "custom:button-card"
              #   template: rail_interchange_row
              #   variables:
              #     rail0_top_entity: binary_sensor.ping_kitchen_mesh_repeater
              #     rail0_bottom_entity: binary_sensor.ping_kitchen_mesh_repeater
              #     rail1_top_entity: binary_sensor.ping_blue_cave_mesh
              #     rail1_bottom_entity: binary_sensor.ping_bedroom_mesh_repeater
              #     rail2_bottom_entity: binary_sensor.ping_dorothy_illinoise
              #     station_size_from: 1
              #     station_size_to: 2
              #   name: Workspace Mesh Node
              #   label: "[[[ entity.last_changed ]]]"
              #   state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              # - entity: binary_sensor.ping_bedroom_mesh_repeater
              #   type: "custom:button-card"
              #   template: rail_station_row
              #   variables:
              #     rail0_entity: binary_sensor.ping_kitchen_mesh_repeater
              #     rail1_entity: binary_sensor.ping_bedroom_mesh_repeater
              #     rail2_entity: binary_sensor.ping_dorothy_illinoise
              #     station_rail: 1
              #     terminate_at: bottom
              #   label: "[[[ entity.last_changed ]]]"
              #   state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              # - entity: binary_sensor.ping_dorothy_illinoise
              #   type: "custom:button-card"
              #   template: rail_station_row
              #   variables:
              #     rail0_entity: binary_sensor.ping_kitchen_mesh_repeater
              #     rail2_entity: binary_sensor.ping_dorothy_illinoise
              #     station_rail: 2
              #     terminate_at: bottom
              #   label: 192.168.1.1
              #   state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

              # - entity: binary_sensor.ping_kitchen_mesh_repeater
              #   type: "custom:button-card"
              #   template: rail_station_row
              #   variables:
              #     rail0_entity: binary_sensor.ping_kitchen_mesh_repeater
              #     station_rail: 0
              #     terminate_at: bottom terminal
              #   label: "[[[ entity.last_changed ]]]"
              #   state_display: '[[[ return entity.attributes.round_trip_time_avg ? (Math.round(entity.attributes.round_trip_time_avg)) + "ms" : "Off" ]]]'

      # [Column] UnFi Dream Machine
      - type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: header_card
            variables:
              name: UNIFI DREAM MACHINE
              label: More
              arrow: "mdi:arrow-top-right"
              action: url
              link: 192.168.1.1
            view_layout:
              grid-column: 1/-1
          - type: vertical-stack
            cards:
              - type: entities
                state_color: true
                card_mod:
                  class: content
                entities:
                  - entity: binary_sensor.template_udm_internet
                    secondary_info: last-changed

                  - entity: sensor.template_udm_cpu_temp
                    name: CPU Temperature

                  - type: custom:bar-card
                    width: 55%
                    height: 2em
                    decimal: 0
                    unit_of_measurement: "%"
                    positions:
                      icon: outside
                      indicator: "off"
                      name: outside
                    severity:
                      - color: "#6d2525"
                        from: 90
                        to: 999
                    entity_row: true
                    entities:
                      - entity: sensor.template_udm_cpu
                      - entity: sensor.template_udm_mem
                      - entity: sensor.template_udm_disk

                  - entity: sensor.template_udm_uptime

      # [Column] Download
      - type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: header_card_no_link
            variables:
              name: INTERNET SPEEDTEST
            view_layout:
              grid-column-start: 1
              grid-column-end: -1
          - type: custom:stack-in-card
            cards:
              - type: custom:stack-in-card
                mode: horizontal
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:apexcharts-card
                        chart_type: radialBar
                        experimental:
                          color_threshold: true
                        series:
                          - entity: sensor.speedtest_download
                            color_threshold:
                              - value: 5
                                color: rgb(244, 67, 54)
                              - value: 7.5
                                color: rgb(255, 87, 34)
                              - value: 10
                                color: rgb(255, 152, 0)
                              - value: 12.5
                                color: rgb(255, 193, 7)
                              - value: 15
                                color: rgb(255, 235, 59)
                              - value: 17.5
                                color: rgb(205, 220, 57)
                              - value: 20
                                color: rgb(129, 915, 74)
                              - value: 25
                                color: rgb(76, 175, 80)
                              - value: 30
                                color: rgb(78, 175, 80)
                            max: 30
                            show:
                              legend_value: false
                        apex_config:
                          plotOptions:
                            radialBar:
                              offsetY: 0
                              startAngle: -108
                              endAngle: 108
                              hollow:
                                size: 80%
                              dataLabels:
                                name:
                                  show: false
                                value:
                                  show: false
                              track:
                                strokeWidth: 70%
                                margin: 0
                          fill:
                            type: gradient
                          legend:
                            show: false
                          chart:
                            height: 130
                        card_mod:
                          style: |
                            ha-card {
                              box-shadow: none;
                              background: none;
                            }
                      - type: custom:mushroom-template-card
                        entity: sensor.speedtest_download
                        primary: |
                          {{states('sensor.speedtest_download')|round(1)}} Mbps
                        secondary: Download
                        icon: mdi:download
                        icon_color: |-
                          {% set value = states('sensor.speedtest_download') | int %}
                          {% if value < 5.0 %}
                            red
                          {% elif value < 7.5 %}
                            deep-orange
                          {% elif value < 10.0 %}
                            orange
                          {% elif value < 12.5 %}
                            amber
                          {% elif value < 15.0 %}
                            yellow
                          {% elif value < 17.5 %}
                            lime
                          {% elif value < 20.0 %}
                            light-green
                          {% elif value < 22.5 %}
                            green
                          {% else %}
                            green
                          {% endif %}
                        layout: vertical
                        card_mod:
                          style: |
                            ha-card {
                              margin-top: -65px;
                              margin-left: auto;
                              margin-right: auto;
                              margin-bottom: 2px;
                              box-shadow: none;
                              background: none;
                            }
                  - type: vertical-stack
                    cards:
                      - type: custom:apexcharts-card
                        chart_type: radialBar
                        experimental:
                          color_threshold: true
                        series:
                          - entity: sensor.speedtest_upload
                            color_threshold:
                              - value: 0.5
                                color: rgb(244, 67, 54)
                              - value: 1
                                color: rgb(255, 87, 34)
                              - value: 1.5
                                color: rgb(255, 152, 0)
                              - value: 2
                                color: rgb(255, 193, 7)
                              - value: 2.5
                                color: rgb(255, 235, 59)
                              - value: 3
                                color: rgb(205, 220, 57)
                              - value: 3.5
                                color: rgb(129, 915, 74)
                              - value: 4
                                color: rgb(76, 175, 80)
                              - value: 5
                                color: rgb(78, 175, 80)
                            max: 5
                            show:
                              legend_value: false
                        apex_config:
                          plotOptions:
                            radialBar:
                              offsetY: 0
                              startAngle: -108
                              endAngle: 108
                              hollow:
                                size: 80%
                              dataLabels:
                                name:
                                  show: false
                                value:
                                  show: false
                              track:
                                strokeWidth: 70%
                                margin: 0
                          fill:
                            type: gradient
                          legend:
                            show: false
                          chart:
                            height: 130
                        card_mod:
                          style: |
                            ha-card {
                              box-shadow: none;
                              background: none;
                            }
                      - type: custom:mushroom-template-card
                        entity: sensor.speedtest_upload
                        primary: |
                          {{states('sensor.speedtest_upload')|round(1)}} Mbps
                        secondary: Upload
                        icon: mdi:upload
                        icon_color: |-
                          {% set value = states('sensor.speedtest_upload') | int %}
                          {% if value < 0.5 %}
                            red
                          {% elif value < 1 %}
                            deep-orange
                          {% elif value < 2 %}
                            orange
                          {% elif value < 3 %}
                            amber
                          {% elif value < 3.5 %}
                            yellow
                          {% elif value < 4 %}
                            lime
                          {% elif value < 4.5 %}
                            light-green
                          {% elif value < 5 %}
                            green
                          {% else %}
                            green
                          {% endif %}
                        layout: vertical
                        card_mod:
                          style: |
                            ha-card {
                              margin-top: -65px;
                              margin-left: auto;
                              margin-right: auto;
                              margin-bottom: 2px;
                              box-shadow: none;
                              background: none;
                            }
                  - type: vertical-stack
                    cards:
                      - type: custom:mushroom-entity-card
                        entity: sensor.speedtest_ping
                        primary_info: state
                        secondary_info: name
                        name: Ping
                        icon_color: teal
                        icon: mdi:wan
                        layout: vertical
                        card_mod:
                          style: |
                            ha-card {
                              margin-top: 20px;
                              margin-left: auto;
                              margin-right: auto;
                              margin-bottom: 2px;
                              box-shadow: none;
                              background: none;
                            }
                card_mod:
                  style: |
                    ha-card {
                      box-shadow: none;
                      background: none;
                    }

      # [Column] T'Ping
      - type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: header_card_no_link
            variables:
              name: PING
            view_layout:
              grid-column: 1/-1

          - hours_to_show: 24
            graph: line
            type: sensor
            entity: sensor.speedtest_ping
            detail: 2

          - type: "custom:uptime-card"
            entity: binary_sensor.ping_cloudflare
            color:
              none: null
            bar:
              round: 0
              height: 48
              spacing: 4
            init: {}
            alias:
              ok: Connected
              ko: Disconnected
            tap_action: {}
            tooltip: {}
            blink: {}

      # [Column] AdGuard
      - type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: header_card
            variables:
              name: ADGUARD
              label: Manage
              link: /a0d7b954_adguard
            view_layout:
              grid-column-start: 1
              grid-column-end: -1
          - type: sensor
            graph: line
            entity: sensor.adguard_dns_queries
            detail: 2
          - type: sensor
            graph: line
            entity: sensor.adguard_dns_queries_blocked_ratio
            detail: 2
          - type: sensor
            graph: line
            entity: sensor.adguard_average_processing_speed
          - !include network/adguard/graph_adsblocked.yaml
          - !include network/adguard/graph_adsblockedpct.yaml
          - !include network/adguard/graph_procspeed.yaml
          - type: entities
            entities:
              - sensor.adguard_average_processing_speed
              - sensor.adguard_dns_queries
              - sensor.adguard_dns_queries_blocked
              - sensor.adguard_dns_queries_blocked_ratio
              - sensor.adguard_parental_control_blocked
              - sensor.adguard_rules_count
              - sensor.adguard_safe_browsing_blocked
              - sensor.adguard_safe_searches_enforced
            title: Stats
            show_header_toggle: false
            style: |
              .card-header {
                padding: 5px 16px;
                font-size: 18px;
                font-weight: 700 !important;
              }
              .card-content div {
                  margin: 0 !important;
              }
              #states {
                padding-top: 0px !important;
                padding-bottom: 0px !important;
              }
              .secondary {
                color: darkgray !important;
                margin-left: 2px !important;
              }
          - type: entities
            entities:
              - switch.adguard_filtering
              - switch.adguard_parental_control
              - switch.adguard_protection
              - switch.adguard_query_log
              - switch.adguard_safe_browsing
              - switch.adguard_safe_search
            title: Switches
            show_header_toggle: false
            style: |
              .card-header {
                padding: 5px 16px;
                font-size: 18px;
                font-weight: 700 !important;
              }
              .card-content div {
                  margin: 0 !important;
              }
              #states {
                padding-top: 0px !important;
                padding-bottom: 0px !important;
              }
              .secondary {
                color: darkgray !important;
                margin-left: 2px !important;
              }

      # # [Column] Outlet
      # - type: vertical-stack
      #   cards:
      #     - type: "custom:button-card"
      #       template: header_card
      #       variables:
      #         name: VALHALLA OUTLET
      #         label: Open
      #         arrow: "mdi:arrow-top-right"
      #         action: url
      #         link: 192.168.1.1
      #       view_layout:
      #         grid-column-start: 1
      #         grid-column-end: -1
      #     - type: entities
      #       entities:
      #         - entity: binary_sensor.valhalla_outlet_modem
      #         - entity: binary_sensor.valhalla_outlet_router
      #     - type: entities
      #       entities:
      #         - &network-event-log
      #           type: "custom:button-card"
      #           entity: sensor.valhalla_outlet_event
      #           show_icon: false
      #           show_state: true
      #           name: "[[[ return entity.attributes.event_0_time ]]]"
      #           state_display: "[[[ return entity.attributes.event_0 ]]]"
      #           tap_action:
      #             action: none
      #           styles:
      #             card:
      #               - background: none
      #               - padding: 8px 0
      #             grid:
      #               - grid-template-areas: '"n" "s"'
      #             name:
      #               - font-size: var(--h6-font-size)
      #               - place-self: center start
      #             state:
      #               - font-size: var(--body-font-size)
      #               - place-self: center start
      #         - <<: *network-event-log
      #           name: "[[[ return entity.attributes.event_1_time ]]]"
      #           state_display: "[[[ return entity.attributes.event_1 ]]]"
      #         - <<: *network-event-log
      #           name: "[[[ return entity.attributes.event_2_time ]]]"
      #           state_display: "[[[ return entity.attributes.event_2 ]]]"
      #         - <<: *network-event-log
      #           name: "[[[ return entity.attributes.event_3_time ]]]"
      #           state_display: "[[[ return entity.attributes.event_3 ]]]"
      #         - <<: *network-event-log
      #           name: "[[[ return entity.attributes.event_4_time ]]]"
      #           state_display: "[[[ return entity.attributes.event_4 ]]]"
      #         - <<: *network-event-log
      #           name: "[[[ return entity.attributes.event_5_time ]]]"
      #           state_display: "[[[ return entity.attributes.event_5 ]]]"
      #       title: Event Log
