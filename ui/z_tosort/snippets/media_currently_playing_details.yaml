---
type: custom:stack-in-card
cards:
  - type: custom:mushroom-media-player-card
    entity: media_player.currently_playing
    icon: mdi:play
    name: Media Player
    use_media_info: true
    use_media_artwork: false
    show_volume_level: false
    media_controls:
      - play_pause_stop
      - previous
      - next
    volume_controls:
      - volume_buttons
      - volume_set
    fill_container: false
    collapsible_controls: true
    card_mod:
      style:
        mushroom-shape-icon:
          $: |
            ha-icon {

              /* Animate media player icon based on media type */
              {% set media_type = state_attr(config.entity, 'media_content_type') %}
              --icon-animation:
              {% if media_type == 'tvshow' %}
                flicker 1s linear infinite alternate
              {% elif media_type == 'movie' %}
                spin 2s linear infinite reverse
              {% elif media_type == 'music' %}
                beat 1.3s ease-out infinite both
              {% elif media_type == 'playlist' %}
                beat 1.3s ease-out infinite both
              {% endif %};

              /* Stop animation while paused */
              {{ '--icon-animation: none;' if not is_state(config.entity, 'playing') }}
            }
            @keyframes flicker {
              0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { opacity: 1; }
              32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { opacity: 0.6; }
            }
            @keyframes beat {
              0% { transform: scale(1); }
              10% { transform: scale(1.1); }
              17% { transform: scale(1.05); }
              33% { transform: scale(1.25); }
              60% { transform: scale(1); }
            }
        .: |
          mushroom-shape-icon {

            /* Change media player icon based on media type */
            {% set media_type = state_attr(config.entity, 'media_content_type') %}
            --card-mod-icon:
            {% if media_type == 'tvshow' %}
               mdi:television-classic
            {% elif media_type == 'movie' %}
              mdi:movie-roll
            {% elif media_type == 'music' %}
              mdi:music
            {% elif media_type == 'playlist' %}
              mdi:music
            {% else %}
              mdi:play
            {% endif %};
          }
          ha-card {

            /* Remove border from media player */
            --ha-card-border-width: 0;

            /* Apply album art color to media player icon & volume bar */
            --rgb-state-media-player: var(--album-art-color);

            /* Disable transitions */
            transition: all 0s;
          }
          .actions {

            /* Apply to controls only when active */
            {% if is_state(config.entity, ['playing', 'paused']) %}

              /* Apply album art color to media player controls */
              --rgb-primary-text-color: var(--album-art-color);
              --primary-text-color: rgb(var(--album-art-color));

              /* Add space for progress bar */
              padding-top: 24px;
            {% endif %}
          }
  - entity: media_player.currently_playing
    hide:
      icon: true
      name: true
      runtime: true
      source: true
      power: true
      state_label: true
      volume: true
      info: true
      progress: false
      controls: true
    more_info: false
    type: custom:mini-media-player
    toggle_power: false
    group: true
    card_mod:
      style:
        mmp-progress$: |
          paper-progress {

            /* Hide the progress bar when not playing or paused */
            {{ 'display: none;' if not is_state(config.entity, ['playing', 'paused']) }}

            /* Apply album art color to progress bar when paused */
            --paper-progress-container-color: rgba(var(--album-art-color), 0.2) !important;

            /* Apply album art color to progress bar when playing */
            --paper-progress-active-color: rgb(var(--album-art-color)) !important;
          }
        .: |
          ha-card {

            /* Move progress bar up into gap */
            bottom: calc(3 * var(--mush-spacing, 12px) + var(--mush-control-height, 42px));

            /* Correct margins for progress bar */
            margin: 0px calc(1.618 * var(--mush-spacing, 12px)) calc(-1 * var(--mush-spacing, 12px));

            /* Set height of card to match pregress bar height */
            height: var(--mmp-progress-height);

            /* Remove border outline */
            --ha-card-border-width: 0;

            /* Round corners of progress bar */
            --mmp-border-radius: var(--control-border-radius, 12px) !important;

            /* Set height of progress bar */
            --mmp-progress-height: var(--mush-spacing, 12px) !important;

            /* Remove transitions to prevent progress bar floating in */
            transition: all 0s;
          }
card_mod:
  style: |
    ha-card:before {
      content: "";

      /* Position and size background color */
      position: absolute;
      height: 100%;
      width: 100%;

      /* Apply background to media player using album art color */
      {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
        background: rgba({{ states('sensor.dark_vibrant_color') }}, 0.3);
      {% endif %}

    }
    ha-card {

      /* Apply blended album art background */
      {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
        background: url( '{{ state_attr("media_player.currently_playing", "entity_picture") }}' ) no-repeat,
                    linear-gradient(to left, transparent, rgb(var(--rgb-card-background-color)) 50%);

        /* Adjust for different aspect ratio of TV shows episode art */
        {% if state_attr('media_player.currently_playing', 'media_content_type') == 'tvshow' %}
          background-size: 50% 100%, cover;
        {% else %}
          background-size: 50% auto, cover;
        {% endif %}

        /* Position art on right side */
        background-position: right;

        /* Blend art with background using saturation */
        background-blend-mode: saturation;
      {% endif %}
    }
    :host {

      /* Assign album art color to variable used in media player. Default to indigo when idle */
      --album-art-color:
      {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
        {{ states('sensor.muted_color') }}
      {% else %}
        var(--mush-rgb-indigo, 63, 81, 181)
      {% endif %};
    }
