{"version":3,"file":"expander-card.js","sources":["../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/version.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/disclose-version.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/constants.js","../node_modules/.pnpm/esm-env@1.0.0/node_modules/esm-env/prod-browser.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/warnings.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/shared/utils.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/constants.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/reactivity/equality.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/errors.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/reactivity/sources.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/reactivity/deriveds.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/reactivity/effects.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/task.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/shared/errors.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/runtime.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/proxy.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/operations.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/hydration.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/elements/events.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/reconciler.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/template.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/utils.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/render.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/blocks/if.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/blocks/each.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/blocks/svelte-element.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/css.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/elements/actions.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/elements/attributes.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/elements/class.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/timing.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/loop.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/elements/transitions.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/elements/bindings/this.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/index-client.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/reactivity/store.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/reactivity/props.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/legacy/legacy-client.js","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/internal/client/dom/elements/custom-element.js","../src/cardUtil.svelte.ts","../node_modules/.pnpm/svelte@5.1.2/node_modules/svelte/src/transition/index.js","../src/Card.svelte","../node_modules/.pnpm/svelte-collapse@0.1.3/node_modules/svelte-collapse/src/collapse.js","../src/ExpanderCard.svelte","../src/index.ts"],"sourcesContent":["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '5.1.2';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","export const BROWSER = true;\nexport const DEV = false;\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"binding_property_non_reactive\");\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"console_log_state\");\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"event_handler_invalid\");\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"hydration_attribute_changed\");\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : \"The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"hydration_html_changed\");\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : \"Hydration failed because the initial UI does not match what was rendered on the server\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"hydration_mismatch\");\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"invalid_raw_snippet_render\");\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"legacy_recursive_reactive_block\");\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"lifecycle_double_unmount\");\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"ownership_invalid_binding\");\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : \"Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"ownership_invalid_mutation\");\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"state_proxy_equality_mismatch\");\n\t}\n}","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const UNOWNED = 1 << 7;\nexport const DISCONNECTED = 1 << 8;\nexport const CLEAN = 1 << 9;\nexport const DIRTY = 1 << 10;\nexport const MAYBE_DIRTY = 1 << 11;\nexport const INERT = 1 << 12;\nexport const DESTROYED = 1 << 13;\nexport const EFFECT_RAN = 1 << 14;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 15;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 16;\nexport const INSPECT_EFFECT = 1 << 17;\nexport const HEAD_EFFECT = 1 << 18;\nexport const EFFECT_HAS_DERIVED = 1 << 19;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_checkbox_value\");\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_export\");\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_not_bindable\");\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_changed\");\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_invalid_new\");\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"derived_references_self\");\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"each_key_duplicate\");\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_teardown\");\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_unowned_derived\");\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_orphan\");\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_update_depth_exceeded\");\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"hydration_failed\");\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"invalid_snippet\");\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_legacy_only\");\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_invalid_value\");\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_rest_readonly\");\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"rune_outside_svelte\");\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_descriptors_fixed\");\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_prototype_fixed\");\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_local_read\");\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_mutation\");\n\t}\n}","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tcomponent_context,\n\tactive_reaction,\n\tnew_deps,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tis_runes,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @returns {Source<V>}\n */\nexport function source(v) {\n\treturn {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\tversion: 0\n\t};\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tsource.v = value;\n\t\tsource.version = increment_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// If the current signal is running for the first time, it won't have any\n\t\t// reactions as we only allocate and assign the reactions after the signal\n\t\t// has fully executed. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0\n\t\t) {\n\t\t\tif (new_deps !== null && new_deps.includes(source)) {\n\t\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\t\tschedule_effect(active_effect);\n\t\t\t} else {\n\t\t\t\tif (untracked_writes === null) {\n\t\t\t\t\tset_untracked_writes([source]);\n\t\t\t\t} else {\n\t\t\t\t\tuntracked_writes.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_version,\n\tset_active_effect,\n\tcomponent_context\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\n\tif (active_effect === null) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tchildren: null,\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\tv: /** @type {V} */ (null),\n\t\tversion: 0,\n\t\tparent: active_effect\n\t};\n\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t(derived.children ??= []).push(signal);\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tvar children = derived.children;\n\n\tif (children !== null) {\n\t\tderived.children = null;\n\n\t\tfor (var i = 0; i < children.length; i += 1) {\n\t\t\tvar child = children[i];\n\t\t\tif ((child.f & DERIVED) !== 0) {\n\t\t\t\tdestroy_derived(/** @type {Derived} */ (child));\n\t\t\t} else {\n\t\t\t\tdestroy_effect(/** @type {Effect} */ (child));\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(derived.parent);\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.version = increment_version();\n\t}\n}\n\n/**\n * @param {Derived} signal\n * @returns {void}\n */\nexport function destroy_derived(signal) {\n\tdestroy_derived_children(signal);\n\tremove_reactions(signal, 0);\n\tset_signal_status(signal, DESTROYED);\n\n\t// TODO we need to ensure we remove the derived from any parent derives\n\tsignal.v = signal.children = signal.deps = signal.ctx = signal.reactions = null;\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, Reaction, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tcomponent_context,\n\tactive_effect,\n\tactive_reaction,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { destroy_derived } from './deriveds.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & EFFECT_HAS_DERIVED) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.children ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (active_reaction === null) {\n\t\treturn false;\n\t}\n\n\treturn (active_reaction.f & UNOWNED) === 0;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function template_effect(fn) {\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\treturn block(fn);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_effect_deriveds(signal) {\n\tvar deriveds = signal.deriveds;\n\n\tif (deriveds !== null) {\n\t\tsignal.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_deriveds(effect);\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.parent =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// apply the change now\n\tif (check_dirtiness(effect)) {\n\t\tupdate_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"invalid_default_snippet\");\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_outside_component\");\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"store_invalid_shape\");\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"svelte_element_invalid_this_value\");\n\t}\n}","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\tdestroy_effect_deriveds,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { mutate, set, source } from './reactivity/sources.js';\nimport { destroy_derived, execute_derived, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/** @type {number} Used by sources and deriveds for handling updates to unowned deriveds */\nlet current_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\nexport let is_signals_recorded = false;\nlet captured_signals = new Set();\n\n// Handling runtime component context\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_version() {\n\treturn ++current_version;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn component_context !== null && component_context.l === null;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\n\t\t\tif ((flags & DISCONNECTED) !== 0) {\n\t\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t(dependencies[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\tvar dependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\t// If we are working with an unowned signal as part of an effect (due to !skip_reaction)\n\t\t\t\t// and the version hasn't changed, we still need to check that this reaction\n\t\t\t\t// is linked to the dependency source – otherwise future updates will not be caught.\n\t\t\t\tif (\n\t\t\t\t\tis_unowned &&\n\t\t\t\t\tactive_effect !== null &&\n\t\t\t\t\t!skip_reaction &&\n\t\t\t\t\t!dependency?.reactions?.includes(reaction)\n\t\t\t\t) {\n\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\tif (dependency.version > reaction.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean.\n\t\tif (!is_unowned) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Error} error\n * @param {Effect} effect\n * @param {ComponentContext | null} component_context\n */\nfunction handle_error(error, effect, component_context) {\n\t// Given we don't yet have error boundaries, we will just always throw.\n\tif (!DEV || handled_errors.has(error) || component_context === null) {\n\t\tthrow error;\n\t}\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: error.stack + new_lines.join('\\n')\n\t\t});\n\t}\n\n\thandled_errors.add(error);\n\tthrow error;\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction = !is_flushing_effect && (flags & UNOWNED) !== 0;\n\tderived_sources = null;\n\tcomponent_context = reaction.ctx;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tcomponent_context = previous_component_context;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = reactions.indexOf(signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tdestroy_effect_deriveds(effect);\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.version = current_version;\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(/** @type {Error} */ (error), effect, previous_component_context);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\ttry {\n\t\t\t\te.effect_update_depth_exceeded();\n\t\t\t} catch (error) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(\n\t\t\t\t\t'Last ten effects were: ',\n\t\t\t\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t\t\t\t);\n\t\t\t\tdev_effect_stack = [];\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} else {\n\t\t\te.effect_update_depth_exceeded();\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0 && check_dirtiness(effect)) {\n\t\t\tupdate_effect(effect);\n\n\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t// immediate effects.\n\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t} else {\n\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\teffect.fn = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else if (check_dirtiness(current_effect)) {\n\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tvar sibling = current_effect.next;\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\t// If the derived is destroyed, just execute it again without retaining\n\t// its memoisation properties as the derived is stale\n\tif (is_derived && (flags & DESTROYED) !== 0) {\n\t\tvar value = execute_derived(/** @type {Derived} */ (signal));\n\t\t// Ensure the derived remains destroyed\n\t\tdestroy_derived(/** @type {Derived} */ (signal));\n\t\treturn value;\n\t}\n\n\tif (is_signals_recorded) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\n\t\t// If the signal is accessing the same dependencies in the same\n\t\t// order as it did last time, increment `skipped_deps`\n\t\t// rather than updating `new_deps`, which creates GC cost\n\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\tskipped_deps++;\n\t\t} else if (new_deps === null) {\n\t\t\tnew_deps = [signal];\n\t\t} else {\n\t\t\tnew_deps.push(signal);\n\t\t}\n\n\t\tif (\n\t\t\tuntracked_writes !== null &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0 &&\n\t\t\tuntracked_writes.includes(signal)\n\t\t) {\n\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\tschedule_effect(active_effect);\n\t\t}\n\t} else if (is_derived && /** @type {Derived} */ (signal).deps === null) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && !parent.deriveds?.includes(derived)) {\n\t\t\t(parent.deriveds ??= []).push(derived);\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar previous_is_signals_recorded = is_signals_recorded;\n\tvar previous_captured_signals = captured_signals;\n\tis_signals_recorded = true;\n\tcaptured_signals = new Set();\n\tvar captured = captured_signals;\n\tvar signal;\n\ttry {\n\t\tuntrack(fn);\n\t} finally {\n\t\tis_signals_recorded = previous_is_signals_recorded;\n\t\tif (is_signals_recorded) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\tfor (signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\tmutate(dep, null /* doesnt matter */);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmutate(signal, null /* doesnt matter */);\n\t\t}\n\t}\n}\n\n/**\n * Use `untrack` to prevent something from being treated as an `$effect`/`$derived` dependency.\n *\n * https://svelte-5-preview.vercel.app/docs/functions#untrack\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_reaction = active_reaction;\n\ttry {\n\t\tactive_reaction = null;\n\t\treturn fn();\n\t} finally {\n\t\tactive_reaction = previous_reaction;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {ComponentContext} */ (component_context).function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @param {Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update(signal, d = 1) {\n\tvar value = +get(signal);\n\tset(signal, value + d);\n\treturn value;\n}\n\n/**\n * @param {Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre(signal, d = 1) {\n\treturn set(signal, +get(signal) + d);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (!runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n","/** @import { ProxyMetadata, ProxyStateObject, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, component_context, active_effect } from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata));\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\n\twhile (count--) {\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\tnext_sibling?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} options\n */\nexport function create_event(event_name, dom, handler, options) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tvar previous_effect = active_effect;\n\n\t\t\tset_active_reaction(null);\n\t\t\tset_active_effect(null);\n\t\t\ttry {\n\t\t\t\treturn handler.call(this, event);\n\t\t\t} finally {\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\nimport { queue_micro_task } from './task.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'inert',\n\t'volume'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { push, pop, component_context, active_effect } from './runtime.js';\nimport { effect_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str == null ? '' : str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = effect_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\t\t\tmounted_components.delete(component);\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n * @param {Record<string, any>} component\n */\nexport function unmount(component) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tfn();\n\t} else if (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {() => boolean} get_condition\n * @param {(anchor: Node) => void} consequent_fn\n * @param {null | ((anchor: Node) => void)} [alternate_fn]\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, get_condition, consequent_fn, alternate_fn = null, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {boolean | null} */\n\tvar condition = null;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tblock(() => {\n\t\tif (condition === (condition = !!get_condition())) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else {\n\t\t\t\tconsequent_effect = branch(() => consequent_fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (alternate_fn) {\n\t\t\t\talternate_effect = branch(() => alternate_fn(anchor));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect } from '../../runtime.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\tblock(() => {\n\t\tvar collection = get_collection();\n\n\t\tvar array = is_array(collection)\n\t\t\t? collection\n\t\t\t: collection == null\n\t\t\t\t? []\n\t\t\t\t: array_from(collection);\n\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(hydrate_node, state, prev, null, value, key, i, render_fn, flags);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget_collection();\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the item has an effect that is already inert, skip over adding it\n\t\t\t\t// to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// Inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>) => void} render_fn\n * @param {number} flags\n * @returns {EachItem}\n */\nfunction create_item(anchor, state, prev, next, value, key, index, render_fn, flags) {\n\tvar previous_each_item = current_each_item;\n\n\ttry {\n\t\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\t\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\t\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\t\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\t\t/** @type {EachItem} */\n\t\tvar item = {\n\t\t\ti,\n\t\t\tv,\n\t\t\tk: key,\n\t\t\ta: null,\n\t\t\t// @ts-expect-error\n\t\t\te: null,\n\t\t\tprev,\n\t\t\tnext\n\t\t};\n\n\t\tcurrent_each_item = item;\n\t\titem.e = branch(() => render_fn(anchor, v, i), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, NAMESPACE_SVG } from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { create_text, get_first_child } from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { set_should_intro } from '../../render.js';\nimport { current_each_item, set_current_each_item } from './each.js';\nimport { component_context, active_effect } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport { assign_nodes } from '../template.js';\n\n/**\n * @param {Comment | Element} node\n * @param {() => string} get_tag\n * @param {boolean} is_svg\n * @param {undefined | ((element: Element, anchor: Node | null) => void)} render_fn,\n * @param {undefined | (() => string)} get_namespace\n * @param {undefined | [number, number]} location\n * @returns {void}\n */\nexport function element(node, get_tag, is_svg, render_fn, get_namespace, location) {\n\tlet was_hydrating = hydrating;\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar filename = DEV && location && component_context?.function[FILENAME];\n\n\t/** @type {string | null} */\n\tvar tag;\n\n\t/** @type {string | null} */\n\tvar current_tag;\n\n\t/** @type {null | Element} */\n\tvar element = null;\n\n\tif (hydrating && hydrate_node.nodeType === 1) {\n\t\telement = /** @type {Element} */ (hydrate_node);\n\t\thydrate_next();\n\t}\n\n\tvar anchor = /** @type {TemplateNode} */ (hydrating ? hydrate_node : node);\n\n\t/** @type {Effect | null} */\n\tvar effect;\n\n\t/**\n\t * The keyed `{#each ...}` item block, if any, that this element is inside.\n\t * We track this so we can set it when changing the element, allowing any\n\t * `animate:` directive to bind itself to the correct block\n\t */\n\tvar each_item_block = current_each_item;\n\n\tblock(() => {\n\t\tconst next_tag = get_tag() || null;\n\t\tvar ns = get_namespace ? get_namespace() : is_svg || next_tag === 'svg' ? NAMESPACE_SVG : null;\n\n\t\t// Assumption: Noone changes the namespace but not the tag (what would that even mean?)\n\t\tif (next_tag === tag) return;\n\n\t\t// See explanation of `each_item_block` above\n\t\tvar previous_each_item = current_each_item;\n\t\tset_current_each_item(each_item_block);\n\n\t\tif (effect) {\n\t\t\tif (next_tag === null) {\n\t\t\t\t// start outro\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\teffect = null;\n\t\t\t\t\tcurrent_tag = null;\n\t\t\t\t});\n\t\t\t} else if (next_tag === current_tag) {\n\t\t\t\t// same tag as is currently rendered — abort outro\n\t\t\t\tresume_effect(effect);\n\t\t\t} else {\n\t\t\t\t// tag is changing — destroy immediately, render contents without intro transitions\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tset_should_intro(false);\n\t\t\t}\n\t\t}\n\n\t\tif (next_tag && next_tag !== current_tag) {\n\t\t\teffect = branch(() => {\n\t\t\t\telement = hydrating\n\t\t\t\t\t? /** @type {Element} */ (element)\n\t\t\t\t\t: ns\n\t\t\t\t\t\t? document.createElementNS(ns, next_tag)\n\t\t\t\t\t\t: document.createElement(next_tag);\n\n\t\t\t\tif (DEV && location) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\telement.__svelte_meta = {\n\t\t\t\t\t\tloc: {\n\t\t\t\t\t\t\tfile: filename,\n\t\t\t\t\t\t\tline: location[0],\n\t\t\t\t\t\t\tcolumn: location[1]\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tassign_nodes(element, element);\n\n\t\t\t\tif (render_fn) {\n\t\t\t\t\t// If hydrating, use the existing ssr comment as the anchor so that the\n\t\t\t\t\t// inner open and close methods can pick up the existing nodes correctly\n\t\t\t\t\tvar child_anchor = /** @type {TemplateNode} */ (\n\t\t\t\t\t\thydrating ? get_first_child(element) : element.appendChild(create_text())\n\t\t\t\t\t);\n\n\t\t\t\t\tif (hydrating) {\n\t\t\t\t\t\tif (child_anchor === null) {\n\t\t\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tset_hydrate_node(child_anchor);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// `child_anchor` is undefined if this is a void element, but we still\n\t\t\t\t\t// need to call `render_fn` in order to run actions etc. If the element\n\t\t\t\t\t// contains children, it's a user error (which is warned on elsewhere)\n\t\t\t\t\t// and the DOM will be silently discarded\n\t\t\t\t\trender_fn(element, child_anchor);\n\t\t\t\t}\n\n\t\t\t\t// we do this after calling `render_fn` so that child effects don't override `nodes.end`\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = element;\n\n\t\t\t\tanchor.before(element);\n\t\t\t});\n\t\t}\n\n\t\ttag = next_tag;\n\t\tif (tag) current_tag = tag;\n\t\tset_should_intro(true);\n\n\t\tset_current_each_item(previous_each_item);\n\t}, EFFECT_TRANSPARENT);\n\n\tif (was_hydrating) {\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(anchor);\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { queue_micro_task } from './task.js';\nimport { register_style } from '../dev/css.js';\n\n/**\n * @param {Node} anchor\n * @param {{ hash: string, code: string }} css\n */\nexport function append_styles(anchor, css) {\n\t// Use `queue_micro_task` to ensure `anchor` is in the DOM, otherwise getRootNode() will yield wrong results\n\tqueue_micro_task(() => {\n\t\tvar root = anchor.getRootNode();\n\n\t\tvar target = /** @type {ShadowRoot} */ (root).host\n\t\t\t? /** @type {ShadowRoot} */ (root)\n\t\t\t: /** @type {Document} */ (root).head ?? /** @type {Document} */ (root.ownerDocument).head;\n\n\t\t// Always querying the DOM is roughly the same perf as additionally checking for presence in a map first assuming\n\t\t// that you'll get cache hits half of the time, so we just always query the dom for simplicity and code savings.\n\t\tif (!target.querySelector('#' + css.hash)) {\n\t\t\tconst style = document.createElement('style');\n\t\t\tstyle.id = css.hash;\n\t\t\tstyle.textContent = css.code;\n\n\t\t\ttarget.appendChild(style);\n\n\t\t\tif (DEV) {\n\t\t\t\tregister_style(css.hash, style);\n\t\t\t}\n\t\t}\n\t});\n}\n","/** @import { ActionPayload } from '#client' */\nimport { effect, render_effect } from '../../reactivity/effects.js';\nimport { safe_not_equal } from '../../reactivity/equality.js';\nimport { deep_read_state, untrack } from '../../runtime.js';\n\n/**\n * @template P\n * @param {Element} dom\n * @param {(dom: Element, value?: P) => ActionPayload<P>} action\n * @param {() => P} [get_value]\n * @returns {void}\n */\nexport function action(dom, action, get_value) {\n\teffect(() => {\n\t\tvar payload = untrack(() => action(dom, get_value?.()) || {});\n\n\t\tif (get_value && payload?.update) {\n\t\t\tvar inited = false;\n\t\t\t/** @type {P} */\n\t\t\tvar prev = /** @type {any} */ ({}); // initialize with something so it's never equal on first run\n\n\t\t\trender_effect(() => {\n\t\t\t\tvar value = get_value();\n\n\t\t\t\t// Action's update method is coarse-grained, i.e. when anything in the passed value changes, update.\n\t\t\t\t// This works in legacy mode because of mutable_source being updated as a whole, but when using $state\n\t\t\t\t// together with actions and mutation, it wouldn't notice the change without a deep read.\n\t\t\t\tdeep_read_state(value);\n\n\t\t\t\tif (inited && safe_not_equal(prev, value)) {\n\t\t\t\t\tprev = value;\n\t\t\t\t\t/** @type {Function} */ (payload.update)(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinited = true;\n\t\t}\n\n\t\tif (payload?.destroy) {\n\t\t\treturn () => /** @type {Function} */ (payload.destroy)();\n\t\t}\n\t});\n}\n","import { DEV } from 'esm-env';\nimport { hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task, queue_micro_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\t// @ts-expect-error\n\tif (attributes.value === (attributes.value = value) || element.value === value) return;\n\t// @ts-expect-error\n\telement.value = value;\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (attributes.checked === (attributes.checked = checked)) return;\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {any} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\tif (get_setters(node).includes(prop)) {\n\t\tnode[prop] = value;\n\t} else {\n\t\tset_attribute(node, prop, value);\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\t/** @type {Array<[string, any, () => void]>} */\n\tvar events = [];\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!prev) {\n\t\t\t\t\t\tevents.push([\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t() => (current[event_handle_key] = create_event(event_name, element, handle, opts))\n\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (key === '__value' || (key === 'value' && value != null)) {\n\t\t\t// @ts-ignore\n\t\t\telement.value = element[key] = element.__value = value;\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tif (value == null && !is_custom_element) {\n\t\t\t\tattributes[key] = null;\n\t\t\t\telement.removeAttribute(key);\n\t\t\t} else if (setters.includes(name) && (is_custom_element || typeof value !== 'string')) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value ?? '');\n\t\t\t\t} else {\n\t\t\t\t\tset_attribute(element, name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\t// On the first run, ensure that events are added after bindings so\n\t// that their listeners fire after the binding listeners\n\tif (!prev) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (!element.isConnected) return;\n\t\t\tfor (const [key, value, evt] of events) {\n\t\t\t\tif (current[key] === value) {\n\t\t\t\t\tevt();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\tvar descriptors;\n\tvar proto = get_prototype_of(element);\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","import { hydrating } from '../hydration.js';\n\n/**\n * @param {SVGElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_svg_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {MathMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_mathml_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {HTMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.className === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.className !== next_class_name)\n\t) {\n\t\t// Removing the attribute when the value is only an empty string causes\n\t\t// peformance issues vs simply making the className an empty string. So\n\t\t// we should only remove the class if the the value is nullish.\n\t\tif (value == null) {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.className = next_class_name;\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @returns {string | V}\n */\nfunction to_class(value) {\n\treturn value == null ? '' : value;\n}\n\n/**\n * @param {Element} dom\n * @param {string} class_name\n * @param {boolean} value\n * @returns {void}\n */\nexport function toggle_class(dom, class_name, value) {\n\tif (value) {\n\t\tif (dom.classList.contains(class_name)) return;\n\t\tdom.classList.add(class_name);\n\t} else {\n\t\tif (!dom.classList.contains(class_name)) return;\n\t\tdom.classList.remove(class_name);\n\t}\n}\n","/** @import { Raf } from '#client' */\nimport { noop } from '../shared/utils.js';\n\nimport { BROWSER } from 'esm-env';\n\nconst request_animation_frame = BROWSER ? requestAnimationFrame : noop;\n\nconst now = BROWSER ? () => performance.now() : () => Date.now();\n\n/** @type {Raf} */\nexport const raf = {\n\ttick: /** @param {any} _ */ (_) => request_animation_frame(_),\n\tnow: () => now(),\n\ttasks: new Set()\n};\n","/** @import { TaskCallback, Task, TaskEntry } from '#client' */\nimport { raf } from './timing.js';\n\n// TODO move this into timing.js where it probably belongs\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\traf.tasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\traf.tasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\n\tif (raf.tasks.size !== 0) {\n\t\traf.tick(run_tasks);\n\t}\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {TaskCallback} callback\n * @returns {Task}\n */\nexport function loop(callback) {\n\t/** @type {TaskEntry} */\n\tlet task;\n\n\tif (raf.tasks.size === 0) {\n\t\traf.tick(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\traf.tasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\traf.tasks.delete(task);\n\t\t}\n\t};\n}\n","/** @import { AnimateFn, Animation, AnimationConfig, EachItem, Effect, TransitionFn, TransitionManager } from '#client' */\nimport { noop, is_function } from '../../../shared/utils.js';\nimport { effect } from '../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from '../../runtime.js';\nimport { loop } from '../../loop.js';\nimport { should_intro } from '../../render.js';\nimport { current_each_item } from '../blocks/each.js';\nimport { TRANSITION_GLOBAL, TRANSITION_IN, TRANSITION_OUT } from '../../../../constants.js';\nimport { BLOCK_EFFECT, EFFECT_RAN, EFFECT_TRANSPARENT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {Element} element\n * @param {'introstart' | 'introend' | 'outrostart' | 'outroend'} type\n * @returns {void}\n */\nfunction dispatch_event(element, type) {\n\telement.dispatchEvent(new CustomEvent(type));\n}\n\n/**\n * Converts a property to the camel-case format expected by Element.animate(), KeyframeEffect(), and KeyframeEffect.setKeyframes().\n * @param {string} style\n * @returns {string}\n */\nfunction css_property_to_camelcase(style) {\n\t// in compliance with spec\n\tif (style === 'float') return 'cssFloat';\n\tif (style === 'offset') return 'cssOffset';\n\n\t// do not rename custom @properties\n\tif (style.startsWith('--')) return style;\n\n\tconst parts = style.split('-');\n\tif (parts.length === 1) return parts[0];\n\treturn (\n\t\tparts[0] +\n\t\tparts\n\t\t\t.slice(1)\n\t\t\t.map(/** @param {any} word */ (word) => word[0].toUpperCase() + word.slice(1))\n\t\t\t.join('')\n\t);\n}\n\n/**\n * @param {string} css\n * @returns {Keyframe}\n */\nfunction css_to_keyframe(css) {\n\t/** @type {Keyframe} */\n\tconst keyframe = {};\n\tconst parts = css.split(';');\n\tfor (const part of parts) {\n\t\tconst [property, value] = part.split(':');\n\t\tif (!property || value === undefined) break;\n\n\t\tconst formatted_property = css_property_to_camelcase(property.trim());\n\t\tkeyframe[formatted_property] = value.trim();\n\t}\n\treturn keyframe;\n}\n\n/** @param {number} t */\nconst linear = (t) => t;\n\n/**\n * Called inside keyed `{#each ...}` blocks (as `$.animation(...)`). This creates an animation manager\n * and attaches it to the block, so that moves can be animated following reconciliation.\n * @template P\n * @param {Element} element\n * @param {() => AnimateFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n */\nexport function animation(element, get_fn, get_params) {\n\tvar item = /** @type {EachItem} */ (current_each_item);\n\n\t/** @type {DOMRect} */\n\tvar from;\n\n\t/** @type {DOMRect} */\n\tvar to;\n\n\t/** @type {Animation | undefined} */\n\tvar animation;\n\n\t/** @type {null | { position: string, width: string, height: string, transform: string }} */\n\tvar original_styles = null;\n\n\titem.a ??= {\n\t\telement,\n\t\tmeasure() {\n\t\t\tfrom = this.element.getBoundingClientRect();\n\t\t},\n\t\tapply() {\n\t\t\tanimation?.abort();\n\n\t\t\tto = this.element.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tfrom.left !== to.left ||\n\t\t\t\tfrom.right !== to.right ||\n\t\t\t\tfrom.top !== to.top ||\n\t\t\t\tfrom.bottom !== to.bottom\n\t\t\t) {\n\t\t\t\tconst options = get_fn()(this.element, { from, to }, get_params?.());\n\n\t\t\t\tanimation = animate(this.element, options, undefined, 1, () => {\n\t\t\t\t\tanimation?.abort();\n\t\t\t\t\tanimation = undefined;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tfix() {\n\t\t\t// If an animation is already running, transforming the element is likely to fail,\n\t\t\t// because the styles applied by the animation take precedence. In the case of crossfade,\n\t\t\t// that means the `translate(...)` of the crossfade transition overrules the `translate(...)`\n\t\t\t// we would apply below, leading to the element jumping somewhere to the top left.\n\t\t\tif (element.getAnimations().length) return;\n\n\t\t\t// It's important to destructure these to get fixed values - the object itself has getters,\n\t\t\t// and changing the style to 'absolute' can for example influence the width.\n\t\t\tvar { position, width, height } = getComputedStyle(element);\n\n\t\t\tif (position !== 'absolute' && position !== 'fixed') {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\toriginal_styles = {\n\t\t\t\t\tposition: style.position,\n\t\t\t\t\twidth: style.width,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\ttransform: style.transform\n\t\t\t\t};\n\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.height = height;\n\t\t\t\tvar to = element.getBoundingClientRect();\n\n\t\t\t\tif (from.left !== to.left || from.top !== to.top) {\n\t\t\t\t\tvar transform = `translate(${from.left - to.left}px, ${from.top - to.top}px)`;\n\t\t\t\t\tstyle.transform = style.transform ? `${style.transform} ${transform}` : transform;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tunfix() {\n\t\t\tif (original_styles) {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\tstyle.position = original_styles.position;\n\t\t\t\tstyle.width = original_styles.width;\n\t\t\t\tstyle.height = original_styles.height;\n\t\t\t\tstyle.transform = original_styles.transform;\n\t\t\t}\n\t\t}\n\t};\n\n\t// in the case of a `<svelte:element>`, it's possible for `$.animation(...)` to be called\n\t// when an animation manager already exists, if the tag changes. in that case, we need to\n\t// swap out the element rather than creating a new manager, in case it happened at the same\n\t// moment as a reconciliation\n\titem.a.element = element;\n}\n\n/**\n * Called inside block effects as `$.transition(...)`. This creates a transition manager and\n * attaches it to the current effect — later, inside `pause_effect` and `resume_effect`, we\n * use this to create `intro` and `outro` transitions.\n * @template P\n * @param {number} flags\n * @param {HTMLElement} element\n * @param {() => TransitionFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n * @returns {void}\n */\nexport function transition(flags, element, get_fn, get_params) {\n\tvar is_intro = (flags & TRANSITION_IN) !== 0;\n\tvar is_outro = (flags & TRANSITION_OUT) !== 0;\n\tvar is_both = is_intro && is_outro;\n\tvar is_global = (flags & TRANSITION_GLOBAL) !== 0;\n\n\t/** @type {'in' | 'out' | 'both'} */\n\tvar direction = is_both ? 'both' : is_intro ? 'in' : 'out';\n\n\t/** @type {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig) | undefined} */\n\tvar current_options;\n\n\tvar inert = element.inert;\n\n\t/** @type {Animation | undefined} */\n\tvar intro;\n\n\t/** @type {Animation | undefined} */\n\tvar outro;\n\n\tfunction get_options() {\n\t\tvar previous_reaction = active_reaction;\n\t\tvar previous_effect = active_effect;\n\t\tset_active_reaction(null);\n\t\tset_active_effect(null);\n\t\ttry {\n\t\t\t// If a transition is still ongoing, we use the existing options rather than generating\n\t\t\t// new ones. This ensures that reversible transitions reverse smoothly, rather than\n\t\t\t// jumping to a new spot because (for example) a different `duration` was used\n\t\t\treturn (current_options ??= get_fn()(element, get_params?.() ?? /** @type {P} */ ({}), {\n\t\t\t\tdirection\n\t\t\t}));\n\t\t} finally {\n\t\t\tset_active_reaction(previous_reaction);\n\t\t\tset_active_effect(previous_effect);\n\t\t}\n\t}\n\n\t/** @type {TransitionManager} */\n\tvar transition = {\n\t\tis_global,\n\t\tin() {\n\t\t\telement.inert = inert;\n\n\t\t\tif (!is_intro) {\n\t\t\t\toutro?.abort();\n\t\t\t\toutro?.reset?.();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!is_outro) {\n\t\t\t\t// if we intro then outro then intro again, we want to abort the first intro,\n\t\t\t\t// if it's not a bidirectional transition\n\t\t\t\tintro?.abort();\n\t\t\t}\n\n\t\t\tdispatch_event(element, 'introstart');\n\n\t\t\tintro = animate(element, get_options(), outro, 1, () => {\n\t\t\t\tdispatch_event(element, 'introend');\n\n\t\t\t\t// Ensure we cancel the animation to prevent leaking\n\t\t\t\tintro?.abort();\n\t\t\t\tintro = current_options = undefined;\n\t\t\t});\n\t\t},\n\t\tout(fn) {\n\t\t\tif (!is_outro) {\n\t\t\t\tfn?.();\n\t\t\t\tcurrent_options = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telement.inert = true;\n\n\t\t\tdispatch_event(element, 'outrostart');\n\n\t\t\toutro = animate(element, get_options(), intro, 0, () => {\n\t\t\t\tdispatch_event(element, 'outroend');\n\t\t\t\tfn?.();\n\t\t\t});\n\t\t},\n\t\tstop: () => {\n\t\t\tintro?.abort();\n\t\t\toutro?.abort();\n\t\t}\n\t};\n\n\tvar e = /** @type {Effect} */ (active_effect);\n\n\t(e.transitions ??= []).push(transition);\n\n\t// if this is a local transition, we only want to run it if the parent (branch) effect's\n\t// parent (block) effect is where the state change happened. we can determine that by\n\t// looking at whether the block effect is currently initializing\n\tif (is_intro && should_intro) {\n\t\tvar run = is_global;\n\n\t\tif (!run) {\n\t\t\tvar block = /** @type {Effect | null} */ (e.parent);\n\n\t\t\t// skip over transparent blocks (e.g. snippets, else-if blocks)\n\t\t\twhile (block && (block.f & EFFECT_TRANSPARENT) !== 0) {\n\t\t\t\twhile ((block = block.parent)) {\n\t\t\t\t\tif ((block.f & BLOCK_EFFECT) !== 0) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trun = !block || (block.f & EFFECT_RAN) !== 0;\n\t\t}\n\n\t\tif (run) {\n\t\t\teffect(() => {\n\t\t\t\tuntrack(() => transition.in());\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Animates an element, according to the provided configuration\n * @param {Element} element\n * @param {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig)} options\n * @param {Animation | undefined} counterpart The corresponding intro/outro to this outro/intro\n * @param {number} t2 The target `t` value — `1` for intro, `0` for outro\n * @param {(() => void)} on_finish Called after successfully completing the animation\n * @returns {Animation}\n */\nfunction animate(element, options, counterpart, t2, on_finish) {\n\tvar is_intro = t2 === 1;\n\n\tif (is_function(options)) {\n\t\t// In the case of a deferred transition (such as `crossfade`), `option` will be\n\t\t// a function rather than an `AnimationConfig`. We need to call this function\n\t\t// once the DOM has been updated...\n\t\t/** @type {Animation} */\n\t\tvar a;\n\t\tvar aborted = false;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (aborted) return;\n\t\t\tvar o = options({ direction: is_intro ? 'in' : 'out' });\n\t\t\ta = animate(element, o, counterpart, t2, on_finish);\n\t\t});\n\n\t\t// ...but we want to do so without using `async`/`await` everywhere, so\n\t\t// we return a facade that allows everything to remain synchronous\n\t\treturn {\n\t\t\tabort: () => {\n\t\t\t\taborted = true;\n\t\t\t\ta?.abort();\n\t\t\t},\n\t\t\tdeactivate: () => a.deactivate(),\n\t\t\treset: () => a.reset(),\n\t\t\tt: () => a.t()\n\t\t};\n\t}\n\n\tcounterpart?.deactivate();\n\n\tif (!options?.duration) {\n\t\ton_finish();\n\n\t\treturn {\n\t\t\tabort: noop,\n\t\t\tdeactivate: noop,\n\t\t\treset: noop,\n\t\t\tt: () => t2\n\t\t};\n\t}\n\n\tconst { delay = 0, css, tick, easing = linear } = options;\n\n\tvar keyframes = [];\n\n\tif (is_intro && counterpart === undefined) {\n\t\tif (tick) {\n\t\t\ttick(0, 1); // TODO put in nested effect, to avoid interleaved reads/writes?\n\t\t}\n\n\t\tif (css) {\n\t\t\tvar styles = css_to_keyframe(css(0, 1));\n\t\t\tkeyframes.push(styles, styles);\n\t\t}\n\t}\n\n\tvar get_t = () => 1 - t2;\n\n\t// create a dummy animation that lasts as long as the delay (but with whatever devtools\n\t// multiplier is in effect). in the common case that it is `0`, we keep it anyway so that\n\t// the CSS keyframes aren't created until the DOM is updated\n\tvar animation = element.animate(keyframes, { duration: delay });\n\n\tanimation.onfinish = () => {\n\t\t// for bidirectional transitions, we start from the current position,\n\t\t// rather than doing a full intro/outro\n\t\tvar t1 = counterpart?.t() ?? 1 - t2;\n\t\tcounterpart?.abort();\n\n\t\tvar delta = t2 - t1;\n\t\tvar duration = /** @type {number} */ (options.duration) * Math.abs(delta);\n\t\tvar keyframes = [];\n\n\t\tif (duration > 0) {\n\t\t\tif (css) {\n\t\t\t\tvar n = Math.ceil(duration / (1000 / 60)); // `n` must be an integer, or we risk missing the `t2` value\n\n\t\t\t\tfor (var i = 0; i <= n; i += 1) {\n\t\t\t\t\tvar t = t1 + delta * easing(i / n);\n\t\t\t\t\tvar styles = css(t, 1 - t);\n\t\t\t\t\tkeyframes.push(css_to_keyframe(styles));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tget_t = () => {\n\t\t\t\tvar time = /** @type {number} */ (\n\t\t\t\t\t/** @type {globalThis.Animation} */ (animation).currentTime\n\t\t\t\t);\n\n\t\t\t\treturn t1 + delta * easing(time / duration);\n\t\t\t};\n\n\t\t\tif (tick) {\n\t\t\t\tloop(() => {\n\t\t\t\t\tif (animation.playState !== 'running') return false;\n\n\t\t\t\t\tvar t = get_t();\n\t\t\t\t\ttick(t, 1 - t);\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tanimation = element.animate(keyframes, { duration, fill: 'forwards' });\n\n\t\tanimation.onfinish = () => {\n\t\t\tget_t = () => t2;\n\t\t\ttick?.(t2, 1 - t2);\n\t\t\ton_finish();\n\t\t};\n\t};\n\n\treturn {\n\t\tabort: () => {\n\t\t\tif (animation) {\n\t\t\t\tanimation.cancel();\n\t\t\t\t// This prevents memory leaks in Chromium\n\t\t\t\tanimation.effect = null;\n\t\t\t\t// This prevents onfinish to be launched after cancel(),\n\t\t\t\t// which can happen in some rare cases\n\t\t\t\t// see https://github.com/sveltejs/svelte/issues/13681\n\t\t\t\tanimation.onfinish = noop;\n\t\t\t}\n\t\t},\n\t\tdeactivate: () => {\n\t\t\ton_finish = noop;\n\t\t},\n\t\treset: () => {\n\t\t\tif (t2 === 0) {\n\t\t\t\ttick?.(1, 0);\n\t\t\t}\n\t\t},\n\t\tt: () => get_t()\n\t};\n}\n","import { STATE_SYMBOL } from '../../../constants.js';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { component_context, deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { component_context, flush_sync, untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see https://svelte-5-preview.vercel.app/docs/deprecations#createeventdispatcher\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use `$effect.pre` instead — see https://svelte-5-preview.vercel.app/docs/deprecations#beforeupdate-and-afterupdate\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use `$effect` instead — see https://svelte-5-preview.vercel.app/docs/deprecations#beforeupdate-and-afterupdate\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\n/**\n * Synchronously flushes any pending state changes and those that result from it.\n * @param {() => void} [fn]\n * @returns {void}\n */\nexport function flushSync(fn) {\n\tflush_sync(fn);\n}\n\nexport { hydrate, mount, unmount } from './internal/client/render.js';\n\nexport {\n\tgetContext,\n\tgetAllContexts,\n\thasContext,\n\tsetContext,\n\ttick,\n\tuntrack\n} from './internal/client/runtime.js';\n\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\tif (entry.store !== store) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {StoreReferencesContainer}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tteardown(() => {\n\t\tfor (var store_name in stores) {\n\t\t\tconst ref = stores[store_name];\n\t\t\tref.unsubscribe();\n\t\t}\n\t});\n\n\treturn stores;\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tget,\n\tis_signals_recorded,\n\tset_active_effect,\n\tuntrack,\n\tupdate\n} from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { BRANCH_EFFECT, DESTROYED, LEGACY_DERIVED_PROP, ROOT_EFFECT } from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nfunction with_parent_branch(fn) {\n\tvar effect = active_effect;\n\tvar previous_effect = active_effect;\n\n\twhile (effect !== null && (effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\n\t\teffect = effect.parent;\n\t}\n\ttry {\n\t\tset_active_effect(effect);\n\t\treturn fn();\n\t} finally {\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\tvar setter = get_descriptor(props, key)?.set;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = with_parent_branch(() =>\n\t\t\t(immutable ? derived : derived_safe_equal)(() => /** @type {V} */ (props[key]))\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\n\tvar current_value = with_parent_branch(() =>\n\t\tderived(() => {\n\t\t\tvar parent_value = getter();\n\t\t\tvar child_value = get(inner_current_value);\n\t\t\tvar current_derived = /** @type {Derived} */ (active_reaction);\n\n\t\t\t// If the getter from the parent returns undefined, switch\n\t\t\t// to using the local value from inner_current_value instead,\n\t\t\t// as the parent value might have been torn down\n\t\t\tif (from_child || (parent_value === undefined && (current_derived.f & DESTROYED) !== 0)) {\n\t\t\t\tfrom_child = false;\n\t\t\t\twas_from_child = true;\n\t\t\t\treturn child_value;\n\t\t\t}\n\n\t\t\twas_from_child = false;\n\t\t\treturn (inner_current_value.v = parent_value);\n\t\t})\n\t);\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (is_signals_recorded) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t\treturn get(current_value);\n\t};\n}\n","/** @import { ComponentConstructorOptions, ComponentType, SvelteComponent, Component } from 'svelte' */\nimport { DIRTY, MAYBE_DIRTY } from '../internal/client/constants.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { mutable_source, set } from '../internal/client/reactivity/sources.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport {\n\tactive_effect,\n\tcomponent_context,\n\tdev_current_component_function,\n\tflush_sync,\n\tget,\n\tset_signal_status\n} from '../internal/client/runtime.js';\nimport { lifecycle_outside_component } from '../internal/shared/errors.js';\nimport { define_property, is_array } from '../internal/shared/utils.js';\nimport * as w from '../internal/client/warnings.js';\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../constants.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {ComponentConstructorOptions<Props> & {\n * \tcomponent: ComponentType<SvelteComponent<Props, Events, Slots>> | Component<Props>;\n * }} options\n * @returns {SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {SvelteComponent<Props, Events, Slots> | Component<Props>} component\n * @returns {ComponentType<SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {ComponentConstructorOptions & {\n\t *  component: any;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\tvar sources = new Map();\n\n\t\t/**\n\t\t * @param {string | symbol} key\n\t\t * @param {unknown} value\n\t\t */\n\t\tvar add_source = (key, value) => {\n\t\t\tvar s = mutable_source(value);\n\t\t\tsources.set(key, s);\n\t\t\treturn s;\n\t\t};\n\n\t\t// Replicate coarse-grained props through a proxy that has a version source for\n\t\t// each property, which is increment on updates to the property itself. Do not\n\t\t// use our $state proxy because that one has fine-grained reactivity.\n\t\tconst props = new Proxy(\n\t\t\t{ ...(options.props || {}), $$events: {} },\n\t\t\t{\n\t\t\t\tget(target, prop) {\n\t\t\t\t\treturn get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t},\n\t\t\t\thas(target, prop) {\n\t\t\t\t\tget(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t\treturn Reflect.has(target, prop);\n\t\t\t\t},\n\t\t\t\tset(target, prop, value) {\n\t\t\t\t\tset(sources.get(prop) ?? add_source(prop, value), value);\n\t\t\t\t\treturn Reflect.set(target, prop, value);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro ?? false,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\t// We don't flush_sync for custom element wrappers or if the user doesn't want it\n\t\tif (!options?.props?.$$host || options.sync === false) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(() => {\n\t\tfn();\n\t\tvar effect = /** @type {import('#client').Effect} */ (active_effect);\n\t\t// If the effect is immediately made dirty again, mark it as maybe dirty to emulate legacy behaviour\n\t\tif ((effect.f & DIRTY) !== 0) {\n\t\t\tlet filename = \"a file (we can't know which one)\";\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilename = dev_current_component_function?.[FILENAME] ?? filename;\n\t\t\t}\n\t\t\tw.legacy_recursive_reactive_block(filename);\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t});\n}\n\n/**\n * Function to mimic the multiple listeners available in svelte 4\n * @deprecated\n * @param {EventListener[]} handlers\n * @returns {EventListener}\n */\nexport function handlers(...handlers) {\n\treturn function (event) {\n\t\tconst { stopImmediatePropagation } = event;\n\t\tlet stopped = false;\n\n\t\tevent.stopImmediatePropagation = () => {\n\t\t\tstopped = true;\n\t\t\tstopImmediatePropagation.call(event);\n\t\t};\n\n\t\tconst errors = [];\n\n\t\tfor (const handler of handlers) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error `this` is not typed\n\t\t\t\thandler?.call(this, event);\n\t\t\t} catch (e) {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let error of errors) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Function to create a `bubble` function that mimic the behavior of `on:click` without handler available in svelte 4.\n * @deprecated Use this only as a temporary solution to migrate your automatically delegated events in Svelte 5.\n */\nexport function createBubbler() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createBubbler');\n\t}\n\n\treturn (/**@type {string}*/ type) => (/**@type {Event}*/ event) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport {\n\tonce,\n\tpreventDefault,\n\tself,\n\tstopImmediatePropagation,\n\tstopPropagation,\n\ttrusted,\n\tpassive,\n\tnonpassive\n} from '../internal/client/dom/legacy/event-modifiers.js';\n","import { createClassComponent } from '../../../../legacy/legacy-client.js';\nimport { destroy_effect, effect_root, render_effect } from '../../reactivity/effects.js';\nimport { append } from '../template.js';\nimport { define_property, get_descriptor, object_keys } from '../../../shared/utils.js';\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n\n/** @type {any} */\nlet SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** @type {any} The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** @type {Record<string, any>} Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, EventListenerOrEventListenerObject[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<EventListenerOrEventListenerObject, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\t\t/** @type {any} The managed render effect for reflecting attributes */\n\t\t$$me;\n\n\t\t/**\n\t\t * @param {*} $$componentCtor\n\t\t * @param {*} $$slots\n\t\t * @param {*} use_shadow_dom\n\t\t */\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/** @param {string} name */\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {Element} anchor\n\t\t\t\t\t */\n\t\t\t\t\treturn (anchor) => {\n\t\t\t\t\t\tconst slot = document.createElement('slot');\n\t\t\t\t\t\tif (name !== 'default') slot.name = name;\n\n\t\t\t\t\t\tappend(anchor, slot);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\tif (name === 'default' && !this.$$d.children) {\n\t\t\t\t\t\t\tthis.$$d.children = create_slot(name);\n\t\t\t\t\t\t\t$$slots.default = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$$slots[name] = create_slot(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = createClassComponent({\n\t\t\t\t\tcomponent: this.$$ctor,\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$host: this\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tthis.$$me = effect_root(() => {\n\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\t\tfor (const key of object_keys(this.$$c)) {\n\t\t\t\t\t\t\tif (!this.$$p_d[key]?.reflect) continue;\n\t\t\t\t\t\t\tthis.$$d[key] = this.$$c[key];\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$$r = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\n\t\t/**\n\t\t * @param {string} attr\n\t\t * @param {string} _oldValue\n\t\t * @param {string} newValue\n\t\t */\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$me();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {string} attribute_name\n\t\t */\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tobject_keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @param {HTMLElement} element\n */\nfunction get_custom_elements_slots(element) {\n\t/** @type {Record<string, true>} */\n\tconst result = {};\n\telement.childNodes.forEach((node) => {\n\t\tresult[/** @type {Element} node */ (node).slot || 'default'] = true;\n\t});\n\treturn result;\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {any} Component  A Svelte component function\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} exports  Explicitly exported values, other than props\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\texports,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn object_keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tobject_keys(props_definition).forEach((prop) => {\n\t\tdefine_property(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tvar component = this.$$c;\n\n\t\t\t\tif (component) {\n\t\t\t\t\t// // If the instance has an accessor, use that instead\n\t\t\t\t\tvar setter = get_descriptor(component, prop)?.get;\n\n\t\t\t\t\tif (setter) {\n\t\t\t\t\t\tcomponent[prop] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomponent.$set({ [prop]: value });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\texports.forEach((property) => {\n\t\tdefine_property(Class.prototype, property, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[property];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ Class;\n\treturn Class;\n}\n","\n/*\nCopyright 2021-2022 Peter Repukat - FlatspotSoftware\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport type { LovelaceCard, LovelaceCardConfig } from 'custom-card-helpers';\n\nexport interface CardUtil {\n    createCardElement: (config: LovelaceCardConfig) => LovelaceCard;\n}\n\nlet cardUtil: CardUtil|undefined = $state(undefined);\nexport const loadCardUtil = async (): Promise<CardUtil> => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    cardUtil = await (window as any).loadCardHelpers().then((v: any) => v);\n    return cardUtil as CardUtil;\n};\nexport const getCardUtil = () => {\n    if (!cardUtil) {\n        return loadCardUtil();\n    }\n    return cardUtil;\n};\n\n// export const cardUtil: Promise<CardUtil> = (() => ((window as any).loadCardHelpers() as Promise<any>).then((v) => v))();\n","/** @import { BlurParams, CrossfadeParams, DrawParams, FadeParams, FlyParams, ScaleParams, SlideParams, TransitionConfig } from './public' */\n/** @param {number} x */\nconst linear = (x) => x;\n\n/** @param {number} t */\nfunction cubic_out(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nfunction cubic_in_out(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nfunction split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * @param {Element} node\n * @param {BlurParams} [params]\n * @returns {TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_in_out, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * @param {Element} node\n * @param {FadeParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * @param {Element} node\n * @param {FlyParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [x_value, x_unit] = split_css_unit(x);\n\tconst [y_value, y_unit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x_value}${x_unit}, ${(1 - t) * y_value}${y_unit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * @param {Element} node\n * @param {SlideParams} [params]\n * @returns {TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubic_out, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => /** @type {'Left' | 'Right' | 'Top' | 'Bottom'} */ (`${e[0].toUpperCase()}${e.slice(1)}`)\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * @param {Element} node\n * @param {ScaleParams} [params]\n * @returns {TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {DrawParams} [params]\n * @returns {TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubic_in_out } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nfunction assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * @param {CrossfadeParams & {\n * \tfallback?: (node: Element, params: CrossfadeParams, intro: boolean) => TransitionConfig;\n * }} params\n * @returns {[(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig, (node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {CrossfadeParams} params\n\t * @returns {TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = /** @param {number} d */ (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubic_out\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: typeof duration === 'function' ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t   opacity: ${t * opacity};\n\t\t\t   transform-origin: top left;\n\t\t\t   transform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\t\t\tt + (1 - t) * dh\n\t\t\t\t\t});\n\t\t   `\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\t// @ts-expect-error TODO improve typings (are the public types wrong?)\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(/** @type {Element} */ (other_node), node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","<!--\n/*\nCopyright 2021-2022 Peter Repukat - FlatspotSoftware\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n-->\n<!-- eslint-disable-next-line svelte/valid-compile -->\n<svelte:options customElement='expander-sub-card' />\n\n<script lang=\"ts\">\n    import type { LovelaceCard, HomeAssistant, LovelaceCardConfig } from 'custom-card-helpers';\n    import { getCardUtil } from './cardUtil.svelte';\n    import { onMount } from 'svelte';\n    import { slide } from 'svelte/transition';\n\n    const {\n        type = 'div',\n        config,\n        hass,\n        marginTop ='0px'\n    }: { type?: string; config: LovelaceCardConfig; hass: HomeAssistant | undefined; marginTop?: string} = $props();\n\n\n    let container = $state<LovelaceCard>();\n    let loading = $state(true);\n    $effect(() => {\n        if (container) {\n            container.hass = hass;\n        }\n    });\n\n    onMount(async () => {\n        const util = await getCardUtil();\n        const el = util.createCardElement(config);\n        el.hass = hass;\n\n        if (!container) {\n            return;\n        }\n\n        container.replaceWith(el);\n        container = el;\n        loading = false;\n    });\n</script>\n\n<div class=\"outer-container\" style=\"margin-top: {marginTop};\">\n    <svelte:element this={type} bind:this={container} transition:slide|local />\n    {#if loading}\n        <span class=\"loading\"> Loading... </span>\n    {/if}\n</div>\n\n\n<style>\n  .loading {\n    padding: 1em;\n    display: block;\n  }\n</style>\n","\nexport default function collapse (node, params) {\n\n    const defaultParams = {\n        open: true,\n        duration: 0.2,\n        easing: 'ease'\n    }\n\n    params = Object.assign(defaultParams, params)\n\n    const noop = () => {}\n    let transitionEndResolve = noop\n    let transitionEndReject = noop\n\n    const listener = () => {\n        transitionEndResolve();\n        transitionEndResolve = noop;\n        transitionEndReject = noop;\n    };\n\n    node.addEventListener('transitionend', listener);\n\n    // convenience functions\n    async function asyncTransitionEnd () {\n        return new Promise((resolve, reject) => {\n            transitionEndResolve = resolve\n            transitionEndReject = reject\n        })\n    }\n\n    async function nextFrame () {\n        return new Promise(requestAnimationFrame)\n    }\n\n    function transition () {\n        return `height ${params.duration}s ${params.easing}`\n    }\n\n    // set initial styles\n    node.style.transition = transition()\n    node.style.height = params.open ? 'auto' : '0px'\n\n    if (params.open) {\n        node.style.overflow = 'visible'\n    }\n    else {\n        node.style.overflow = 'hidden'\n    }\n\n    async function enter () {\n\n        // height is already in pixels\n        // start the transition\n        node.style.height = node.scrollHeight + 'px'\n\n        // wait for transition to end,\n        // then switch back to height auto\n        try {\n            await asyncTransitionEnd()\n            node.style.height = 'auto'\n            node.style.overflow = 'visible'\n        } catch(err) {\n            // interrupted by a leave transition\n        }\n\n    }\n\n    async function leave () {\n\n        if (node.style.height === 'auto') {\n\n            // temporarily turn transitions off\n            node.style.transition = 'none'\n            await nextFrame()\n\n            // set height to pixels, and turn transition back on\n            node.style.height = node.scrollHeight + 'px'\n            node.style.transition = transition()\n            await nextFrame()\n\n            // start the transition\n            node.style.overflow = 'hidden'\n            node.style.height = '0px'\n\n        }\n        else {\n\n            // we are interrupting an enter transition\n            transitionEndReject()\n            node.style.overflow = 'hidden'\n            node.style.height = '0px'\n\n        }\n\n    }\n\n    function update (newParams) {\n        params = Object.assign(params, newParams)\n        params.open ? enter() : leave()\n    }\n\n    function destroy () {\n        node.removeEventListener('transitionend', listener)\n    }\n\n    return { update, destroy }\n\n}\n","<script lang=\"ts\" module>\n        export const defaults = {\n            'gap': '0.0em',\n            'expanded-gap': '0.6em',\n            'padding': '1em',\n            'clear': false,\n            'title': ' ',\n            'overlay-margin': '0.0em',\n            'child-padding': '0.0em',\n            'child-margin-top': '0.0em',\n            'button-background': 'transparent',\n            'expander-card-background': 'var(--ha-card-background,var(--card-background-color,#fff))',\n            'header-color': 'var(--primary-text-color,#fff)',\n            'arrow-color': 'var(--arrow-color,var(--primary-text-color,#fff))',\n            'expander-card-display': 'block',\n            'title-card-clickable': false,\n            'min-width-expanded': 0,\n            'max-width-expanded': 0\n        };\n</script>\n\n<!-- eslint-disable-next-line svelte/valid-compile -->\n<svelte:options customElement={{\n    tag: 'expander-card',\n    extend: (customElementConstructor) => class extends customElementConstructor {\n        public setConfig(conf = {}) {\n            this.config = { ...defaults, ...conf };\n        };\n    }\n}}/>\n\n<script lang=\"ts\">\n    import type { HomeAssistant } from 'custom-card-helpers';\n    import Card from './Card.svelte';\n    import collapse from 'svelte-collapse';\n    import { onMount } from 'svelte';\n\n    let open = false;\n\n    let isListenerAdded = false;\n\n    // fix for #199\n    // eslint-disable-next-line no-undef-init\n    export let hass: HomeAssistant | undefined = undefined;\n\n    export let config;\n\n    let element: HTMLElement;\n    let touchPreventClick = false;\n\n    onMount(() => {\n        const minWidthExpanded = config['min-width-expanded'];\n        const maxWidthExpanded = config['max-width-expanded'];\n        const offsetWidth = document.body.offsetWidth;\n\n        if (minWidthExpanded && maxWidthExpanded) {\n            config.expanded = offsetWidth >= minWidthExpanded && offsetWidth <= maxWidthExpanded;\n        } else if (minWidthExpanded) {\n            config.expanded = offsetWidth >= minWidthExpanded;\n        } else if (maxWidthExpanded) {\n            config.expanded = offsetWidth <= maxWidthExpanded;\n        }\n\n        if (config.expanded !== undefined) {\n            setTimeout(() => (open = config.expanded), 100);\n        }\n\n        if(isListenerAdded) {\n            return;\n        }\n        if (config['title-card-clickable']) {\n            if (element.parentElement) {\n                isListenerAdded = true;\n                element.parentElement.addEventListener('click', (event) => {\n                    if (touchPreventClick) {\n                        event.preventDefault();\n                        event.stopImmediatePropagation();\n                        touchPreventClick = false;\n                        return false;\n                    }\n                    open = !open;\n                });\n            }\n            return;\n        }\n        if (element.tagName === 'BUTTON') {\n            isListenerAdded = true;\n            element.addEventListener('click', (event) => {\n                if (touchPreventClick) {\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    touchPreventClick = false;\n                    return false;\n                }\n                open = !open;\n            });\n        }\n    });\n\n    let touchElement: HTMLElement | undefined;\n    let isScrolling = false;\n    let startX = 0;\n    let startY = 0;\n    const touchStart = (event: TouchEvent) => {\n        touchElement = event.target as HTMLElement;\n        startX = event.touches[0].clientX;\n        startY = event.touches[0].clientY;\n        isScrolling = false;\n    };\n\n    const touchMove = (event: TouchEvent) => {\n        const currentX = event.touches[0].clientX;\n        const currentY = event.touches[0].clientY;\n        if (Math.abs(currentX - startX) > 10 || Math.abs(currentY - startY) > 10) {\n            isScrolling = true;\n        }\n    };\n\n    const touchEnd = (event: TouchEvent) => {\n        if (!isScrolling && touchElement === event.target && config['title-card-clickable']) {\n            open = !open;\n        }\n        touchElement = undefined;\n        touchPreventClick = true;\n        setTimeout(() => touchPreventClick = false, 300);\n    };\n</script>\n\n<ha-card\n    class={`expander-card${config.clear ? ' clear' : ''}${open ? ' open' : ' close'}`}\n    style=\"--expander-card-display:{config['expander-card-display']};\n     --gap:{open ? config['expanded-gap'] : config.gap}; --padding:{config.padding};\n     --expander-state:{open};\n     --card-background:{open && config['expander-card-background-expanded'] ? config['expander-card-background-expanded']: config['expander-card-background']}\">\n    {#if config['title-card']}\n        <div id='id1' class={`title-card-header${config['title-card-button-overlay'] ? '-overlay' : ''}`}>\n            <div id='id2' class=\"title-card-container\" style=\"--title-padding:{config['title-card-padding']}\" on:touchstart|passive={touchStart} on:touchmove|passive={touchMove} on:touchend={touchEnd}>\n                <Card hass={hass} config={config['title-card']} type={config['title-card'].type} />\n            </div>\n            <button bind:this={element}\n                style=\"--overlay-margin:{config['overlay-margin']}; --button-background:{config[\n                    'button-background'\n                ]}; --header-color:{config['header-color']};\"\n                class={`header ripple${config['title-card-button-overlay'] ? ' header-overlay' : ''}${open ? ' open' : ' close'}`}\n                aria-label=\"Toggle button\"\n            >\n                <ha-icon style=\"--arrow-color:{config['arrow-color']}\" icon=\"mdi:chevron-down\" class={`ico${open ? ' flipped open' : 'close'}`} ></ha-icon>\n            </button>\n        </div>\n    {:else}\n        <button\n            bind:this={element}\n            class={`header${config['expander-card-background-expanded'] ? '' : ' ripple'}${open ? ' open' : ' close'}`}\n            style=\"--header-width:100%; --button-background:{config['button-background']};--header-color:{config['header-color']};\"\n        >\n            <div class={`primary title${open ? ' open' : ' close'}`}>{config.title}</div>\n            <ha-icon style=\"--arrow-color:{config['arrow-color']}\" icon=\"mdi:chevron-down\" class={`ico${open ? ' flipped open' : ' close'}`}></ha-icon>\n        </button>\n    {/if}\n    {#if config.cards}\n        <div\n            style=\"--expander-card-display:{config['expander-card-display']};\n             --gap:{open ? config['expanded-gap'] : config.gap}; --child-padding:{config['child-padding']}\"\n            class=\"children-container\"\n            use:collapse={{ open, duration: 0.3, easing: 'ease' }}\n        >\n            {#each config.cards as card (card)}\n                <Card hass={hass} config={card} type={card.type} marginTop={config['child-margin-top']}/>\n            {/each}\n        </div>\n    {/if}\n</ha-card>\n\n<style>\n    .expander-card {\n        display: var(--expander-card-display,block);\n        gap: var(--gap);\n        padding: var(--padding);\n        background: var(--card-background,#fff);\n    }\n    .children-container {\n        padding: var(--child-padding);\n        display: var(--expander-card-display,block);\n        gap: var(--gap);\n    }\n    .clear {\n        background: none !important;\n        background-color: transparent !important;\n        border-style: none !important;\n    }\n    .title-card-header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex-direction: row;\n    }\n    .title-card-header-overlay {\n        display: block;\n    }\n    .title-card-container {\n        width: 100%;\n        padding: var(--title-padding);\n    }\n    .header {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        padding: 0.8em 0.8em;\n        margin: 2px;\n        background: var(--button-background);\n        border-style: none;\n        width: var(--header-width,auto);\n        color: var(--header-color,#fff);\n    }\n    .header-overlay {\n        position: absolute;\n        top: 0;\n        right: 0;\n        margin: var(--overlay-margin);\n    }\n    .title {\n        width: 100%;\n        text-align: left;\n    }\n    .ico {\n        color: var(--arrow-color,var(--primary-text-color,#fff));\n        transition-property: transform;\n        transition-duration: 0.35s;\n    }\n\n    .flipped {\n        transform: rotate(180deg);\n    }\n\n    .ripple {\n        background-position: center;\n        transition: background 0.8s;\n        border-radius: 1em;\n    }\n    .ripple:hover {\n        background: #ffffff12 radial-gradient(circle, transparent 1%, #ffffff12 1%) center/15000%;\n    }\n    .ripple:active {\n        background-color: #ffffff25;\n        background-size: 100%;\n        transition: background 0s;\n    }\n</style>\n","/*\nCopyright 2021-2022 Peter Repukat - FlatspotSoftware\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nexport { default } from './ExpanderCard.svelte';\nimport { version } from '../package.json';\ndeclare global {\n    interface Window {\n        customCards?: {\n            type: string;\n            name: string;\n            preview: boolean;\n            description: string;\n        }[];\n    }\n}\n\n/* eslint no-console: 0 */\nconsole.info(\n    `%c  Expander-Card \\n%c Version ${version}`,\n    'color: orange; font-weight: bold; background: black',\n    'color: white; font-weight: bold; background: dimgray'\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push(...[\n    {\n        type: 'expander-card',\n        name: 'Expander Card',\n        preview: true,\n        description: 'Expander card'\n    }\n]);\n"],"names":["PUBLIC_VERSION","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","EACH_ITEM_IMMUTABLE","PROPS_IS_IMMUTABLE","PROPS_IS_RUNES","PROPS_IS_UPDATED","PROPS_IS_BINDABLE","PROPS_IS_LAZY_INITIAL","TRANSITION_GLOBAL","TEMPLATE_FRAGMENT","TEMPLATE_USE_IMPORT_NODE","HYDRATION_START","HYDRATION_START_ELSE","HYDRATION_END","HYDRATION_ERROR","UNINITIALIZED","NAMESPACE_SVG","DEV","hydration_mismatch","location","is_array","array_from","object_keys","define_property","get_descriptor","get_descriptors","object_prototype","array_prototype","get_prototype_of","is_function","thing","noop","run","fn","run_all","arr","i","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","LEGACY_DERIVED_PROP","HEAD_EFFECT","EFFECT_HAS_DERIVED","STATE_SYMBOL","LOADING_ATTR_SYMBOL","equals","value","safe_not_equal","a","b","safe_equals","effect_in_teardown","rune","effect_in_unowned_derived","effect_orphan","effect_update_depth_exceeded","hydration_failed","props_invalid_value","key","state_descriptors_fixed","state_prototype_fixed","state_unsafe_local_read","state_unsafe_mutation","source","v","state","push_derived_source","mutable_source","initial_value","immutable","_a","s","component_context","mutable_state","active_reaction","derived_sources","set_derived_sources","set","is_runes","e.state_unsafe_mutation","internal_set","increment_version","mark_reactions","active_effect","new_deps","set_signal_status","schedule_effect","untracked_writes","set_untracked_writes","signal","status","reactions","runes","length","reaction","flags","derived","derived_safe_equal","destroy_derived_children","children","child","destroy_derived","destroy_effect","execute_derived","prev_active_effect","set_active_effect","update_reaction","update_derived","skip_reaction","remove_reactions","validate_effect","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","push_effect","effect","parent_effect","parent_last","create_effect","type","sync","push","is_root","previously_flushing_effect","is_flushing_effect","set_is_flushing_effect","update_effect","e","inert","teardown","user_effect","defer","context","user_pre_effect","render_effect","effect_root","template_effect","block","branch","execute_effect_teardown","previously_destroying_effect","previous_reaction","set_is_destroying_effect","set_active_reaction","destroy_effect_deriveds","deriveds","destroy_effect_children","remove_dom","next","destroy_block_effect_children","removed","node","end","get_next_sibling","transitions","transition","parent","unlink_effect","prev","pause_effect","callback","pause_children","run_out_transitions","remaining","check","local","sibling","transparent","resume_effect","resume_children","check_dirtiness","is_micro_task_queued","current_queued_micro_tasks","process_micro_tasks","tasks","queue_micro_task","flush_tasks","lifecycle_outside_component","name","FLUSH_MICROTASK","FLUSH_SYNC","scheduler_mode","queued_root_effects","flush_count","sources","skipped_deps","current_version","_b","dependencies","is_unowned","dependency","handle_error","error","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","prev_derived_sources","previous_component_context","result","deps","remove_reaction","index","new_length","start_index","previous_effect","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","root_effects","collected_effects","process_effects","flush_queued_effects","effects","process_deferred","previous_queued_root_effects","current_effect","main_loop","is_branch","is_skippable_branch","parent_sibling","flush_sync","previous_scheduler_mode","get","is_derived","e.state_unsafe_local_read","untrack","STATUS_MASK","props","pop","component","context_stack_item","component_effects","component_effect","deep_read_state","deep_read","prop","visited","proto","descriptors","proxy","prototype","is_proxied_array","version","metadata","_","descriptor","e.state_descriptors_fixed","target","ls","n","update_version","receiver","exists","has","other_s","own_keys","e.state_prototype_fixed","d","$window","first_child_getter","next_sibling_getter","init_operations","element_prototype","node_prototype","create_text","get_first_child","is_text","hydrating","hydrate_node","text","set_hydrate_node","count","next_sibling","clear_text_content","set_hydrating","w.hydration_mismatch","hydrate_next","reset","remove_nodes","depth","data","all_registered_events","root_event_handles","create_event","event_name","dom","handler","options","target_handler","event","handle_event_propagation","capture","passive","handler_element","owner_document","path","current_target","path_idx","handled_at","at_idx","handler_idx","throw_error","other_errors","parent_element","delegated","create_fragment_from_html","html","elem","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","clone","append","anchor","PASSIVE_EVENTS","is_passive_event","should_intro","set_should_intro","set_text","str","mount","_mount","hydrate","was_hydrating","previous_hydrate_node","instance","e.hydration_failed","document_listeners","Component","events","intro","registered_events","event_handle","unmount","anchor_node","ctx","mounted_components","if_block","get_condition","consequent_fn","alternate_fn","elseif","consequent_effect","alternate_effect","condition","mismatch","is_else","current_each_item","set_current_each_item","item","pause_effects","items","controlled_anchor","items_map","is_controlled","parent_node","link","each","get_collection","get_key","render_fn","fallback_fn","fallback","was_empty","collection","array","create_item","reconcile","first","current","seen","matched","stashed","child_anchor","update_item","j","move","to_destroy","destroy_length","previous_each_item","reactive","mutable","dest","next_node","element","get_tag","is_svg","get_namespace","tag","current_tag","each_item_block","next_tag","ns","append_styles","css","root","style","action","get_value","payload","inited","set_attribute","attribute","skip_warning","attributes","get_setters","set_custom_element_data","setters_cache","setters","element_proto","set_class","prev_class_name","next_class_name","to_class","request_animation_frame","now","raf","run_tasks","task","loop","fulfill","dispatch_event","css_property_to_camelcase","parts","word","css_to_keyframe","keyframe","part","property","formatted_property","linear","t","get_fn","get_params","is_global","direction","current_options","outro","get_options","animate","counterpart","t2","on_finish","is_intro","aborted","o","delay","tick","easing","keyframes","styles","get_t","animation","t1","delta","duration","time","is_bound_this","bound_value","element_or_component","bind_this","update","get_parts","old_parts","init","callbacks","changed","observe_all","fns","onMount","init_update_callbacks","cleanup","l","is_store_binding","capture_store_binding","previous_is_store_binding","with_parent_branch","bindable","lazy","is_store_sub","prop_value","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","getter","derived_getter","legacy_parent","mutation","from_child","was_from_child","inner_current_value","current_value","parent_value","child_value","current_derived","new_value","createClassComponent","Svelte4Component","_events","_instance","__privateAdd","add_source","__privateSet","__privateGet","cb","args","SvelteElement","$$componentCtor","$$slots","use_shadow_dom","__publicField","listener","unsub","create_slot","slot","existing_slots","get_custom_elements_slots","get_custom_element_value","attribute_value","attr","_oldValue","newValue","attribute_name","props_definition","transform","create_custom_element","slots","exports","extend","Class","cardUtil","loadCardUtil","$.proxy","getCardUtil","cubic_out","f","slide","axis","opacity","primary_property","primary_property_value","secondary_properties","capitalized_secondary_properties","padding_start_value","padding_end_value","margin_start_value","margin_end_value","border_width_start_value","border_width_end_value","config","$.prop","$$props","hass","marginTop","container","$.state","loading","$.user_effect","el","$.set","$$element","$$anchor","$.bind_this","$$value","collapse","params","transitionEndResolve","transitionEndReject","asyncTransitionEnd","resolve","reject","nextFrame","enter","leave","newParams","destroy","defaults","open","isListenerAdded","$.mutable_state","touchPreventClick","minWidthExpanded","maxWidthExpanded","offsetWidth","$.get","touchElement","isScrolling","startX","startY","touchStart","touchMove","currentX","currentY","touchEnd","button","$.set_class","div","$.set_attribute","div_1","$.set_custom_element_data","ha_icon","button_1","$.set_text","ha_icon_1","$.if","node_2","$.each","div_3","card","$.template_effect","ha_card","$.create_custom_element","ExpanderCard","customElementConstructor","conf"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43]}